{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","_typeof","Symbol","iterator","obj","constructor","prototype","index_es_classCallCheck","instance","Constructor","TypeError","index_es_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","index_es_inherits","subClass","superClass","create","value","setPrototypeOf","__proto__","index_es_possibleConstructorReturn","self","call","ReferenceError","toConsumableArray","arr","Array","isArray","arr2","from","imageData","circle","cross","diamond","square","triangle-down","triangle-up","Texture$1","Texture$$1","symbolType","this","image","Image","src","texture","three_module","needsUpdate","symbolTypes","keys","RARE","getDataType","Number","isInteger","orderArray","indices","orderedArr","encodeRareCategories","k","counts","underscore_default","a","countBy","sortBy","pairs","tuple","frequentCategories","map","slice","indexOf","binValues","nbins","extent","d3_default","min","parseFloat","max","interval","domain","range","labels","toFixed","label","push","binValues2","ScatterDataSubset","data","n","_getIndicesAndPositio","getIndicesAndPositions","positions","Uint32Array","Float32Array","x","y","z","metaKey","record","index_es_PointsGeometry","PointsGeometry","args","model","geometry","createGeometry","setIndex","addAttribute","userData","index","getAttr","computeBoundingSphere","index_es_ScatterData","ScatterData","metas","parse","_getIndicesAndPositio2","_this","xyz","_loop","values","o","nUnique","concat","Set","name","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","err","return","labelKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","labelKey","dataSubsets","groupBy","mapObject","records","list","binnedValues","pluck","Math","floor","binBy","filter","edge","binBy2","rec","_this2","colorOptions","meta","shapeOptions","_this3","allLabels","_loop2","options","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","findWhere","dtype","uniqueCats","nUniqueCats","size","idx","greyIdx","elem","_idx","greyIdx2","_elem","colorExtent","minScore","maxScore","colorScale","scale","pow","ordinal","category10","category20","symbols","svg","t","symbol","scatterDataSubsets","shapeLabels","shapeScale","pValueDomain","threshold","index_es_Scatter3dView","_React$Component","Scatter3dView","_this4","getPrototypeOf","is3d","state","isLoading","isLoaded","url","WIDTH","width","HEIGHT","height","DPR","colorKey","shapeKey","pointSize","handleMouseMove","bind","handleMouseClick","_this5","setState","fetch","then","response","ok","json","Error","makeMaterial","setUpStage","shapeBy","renderScatter","prevProps","prevState","snapshot","_this6","startAnimate","setTimeout","animateId","stopAnimate","_this7","node_modules_react_default","_ref","mount","onMouseMove","e","onClick","_this8","_state","aspectRatio","scene","id","uuid","renderer","setClearColor","setPixelRatio","setSize","left","right","bottom","top","camera","position","domElement","controls","OrbitControls","enableZoom","screenSpacePanning","enableRotate","mouseButtons","LEFT","RIGHT","MIDDLE","DOLLY","addEventListener","raycaster","raycasterThreshold","params","Points","mouse","_state2","nativeEvent","offsetX","offsetY","shiftKey","mouseShiftClickCallback","mouseShiftClick","materials","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","textureResult","load","material","vertexColors","sizeAttenuation","alphaTest","transparent","opacity","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","children","child","remove","calculateShapeScale","geometries","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","mergedGeometry","BufferGeometryUtils","mergeBufferGeometries","g","reduce","arr1","getLabels","groupSizes","cumsums","unshift","addGroup","points","clearScene","add","setColors","setFromCamera","intersects","intersectObjects","resetColors","textLabel","getElementById","intersect","object","attributes","color","array","pointPosition","textCanvas","makeTextCanvas","rotation","fontsize","fontface","textColor","r","b","render","message","euler","parameters","hasOwnProperty","lineHeight","canvas","context","getContext","_state3","font","textBaseline","textAlign","fillStyle","point","applyEuler","pv","copy","project","coords","lines","split","fillText","pointerEvents","colors","toArray","_i","_color","animate","_this9","rotate","window","requestAnimationFrame","time","Date","now","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","cancelAnimationFrame","query","removeHighlightedPoints","matchedData","dataSubset","highlightCould","createHighlightCloud","geometryHighlight","highlightPoints","getObjectByName","callback","trueIdx","Component","index_es_Legend","Legend","setUpDOMs","displayColorLegend","displayShapeLegend","el","select","append","attr","zIndex","overflow","legendShape","no_extend_default","orient","title","legendColor","shapeWidth","cells","labelFormat","format","index_es_SelectDropdown","_React$Component2","SelectDropdown","defaultValue","handleChange","_ref2","react_select_browser_esm","onChange","styles","container","onSelectChange","index_es_SearchSelectize","_React$Component3","SearchSelectize","searchStr","searched","handleClear","_ref3","defaultInputValue","placeholder","className","marginTop","onInputChange","onClearBtnClicked","index_es_ScatterBoard","ScatterBoard","searchKeys","handleColorKeyChange","handleShapeKeyChange","handleSearchInputChange","handleClearBtnClick","_props","searchOptions","getColorOptions","getShapeOptions","getSearchOptions","padding","devicePixelRatio","scatter3dView","calculateColorScale","_model$calculateShape","valueObj","highlightQuery","_model$calculateShape2","colWidth","clientWidth","navbar","react_default","Navbar","fixed","bg","variant","Brand","href","Scrollspy_default","items","offset","currentClassName","board2d","datum","alert","JSON","stringify","board3d","board3dNoSearch","developerGuide","prism","language","ghcolors","App","Jumbotron","fluid","Container","Button","Row","Col","md","react_markdown_default","source","xs","wrapLines","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.54b4200b.chunk.js","sourcesContent":["import { BufferGeometry, BufferAttribute, Scene, WebGLRenderer, OrthographicCamera, PerspectiveCamera, MOUSE, Raycaster, Vector2, PointsMaterial, VertexColors, Points, Vector3, Color, Texture } from 'three';\nimport _ from 'underscore';\nimport d3 from 'd3';\nimport React from 'react';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport legend from 'd3-svg-legend/no-extend';\nimport Select from 'react-select';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"body {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\\n#index_root__4PyOE {\\n}\\n\";\nstyleInject(css);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}; // generated according to https://stackoverflow.com/questions/6150289/how-to-convert-image-into-base64-string-using-javascript\n\n\nvar imageData = {\n  circle: ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACtElEQVRYR+2Wz2sTQRTH5+2mNu2QbJY1Ymuym9nkInjwR/HgQRQVEf8Db9KDB0+K+CfovT0IIuKf4EVBUfSioGD1KJjdndmEEJrY1mQDadjdkZFWSkmT3aQShO5133vfz7z9znsLaMIPTFgfHQD8nx2wLOs6ABQ45/qWhxhCiBWLxRdxPRW5A/V6HXe73UdhGN7AGNclSTqWSCT+6Pm+j8IwrHqedxQAnhFCbgNALwpMJADbts8DwHNVVdV0Oo0A+qdxzlGr1ULr6+utIAiulUqlj8MghgLUarUF3/ff5vP59LBiO99Xq9W2LMsX5ufnVwblDQQol8snpqamPui6Hkt8W5Ax1uacnyWEfN8LYiAApbSZy+U0WZbjHP5vbBAEyHXdhmmaR2IDUErvzs7OPshms9MjqW8lNRqNzU6nc58QstSvzp4dYIx91TTtJMZ4HH3U6XTQ2traF13XF2IBWJYVEkJgL8dHpRI3g1IamqbZ9zv27YBt21eSyeTrubm5qDoD42q1Gur1ehcJIe93B/YFoJQ+yWQyi4qi7AvAxsaGmA+PDcO4FRlAUZTFTCYzGQDLsi7NzMy8mdgnEMfeLxOGYYgYY/FMKAAYYyuapp2a2DV0HOcOxvjhuINodXW11+127xmGsRxrDohgx3Ga+Xx+5FEs1nSlUmmappmNPYpFAqX0OELok2EYqVGug+u6nu/7p4vF4o+RALa8cAYh9E7X9VgQruv+Eus4l8t9G3kdbyeWy+Vzsiy/VFVVSaVSSJKkvjWF49vttpj9bYTQZdM0Pw/r3NAfku0CnPNDtm0vAcBNjHETAIQ3psWu8H1/k3P+0/O8w5IkPS0UCuKXLBwmLt5HBthZzHGcq0EQFADA4JwLIVeWZUYIeRVFdGfMSABxRcb2wH4KRlpG/1LwAGB3B34DBWQWMG24djEAAAAASUVORK5CYII=',\n  cross: ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAA50lEQVRYR+2XPQ6DMAyF8QZbfIYchN4spRer6D1yBcyWbKmylZI4WB0oklmdn8cnvfcAupMfOPn+7noCvPeOo2atnSRURQTy5cMwuL7vi/tijCmE8LDW3o+KEAtARIeIxX1ElIhIBSiBixNo+HxExBvngmVZXgDwrNnwOyc2dmr5PB+KiKzFiag6L+XETgDn86PhUltXygkVoAT+jwBXt7/aMITQxRinz7re1ar3vtrlADAaY3IYVet4Xdc5pTQzQbQ5X78HlIASEBPgcqLk81aDigTkw7icyHPJP0FeLxbQeiPpXAW8AUg5MTAvQNb8AAAAAElFTkSuQmCC',\n  diamond: ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACaElEQVRYR9WXy4vTUBTG05DW2E7sI6XPlOTeUkTcqeB2QHApIrgTXIr+AbrVlW5cKbidlStFXKsrl+IsB4T23tiGtolp2pLbTh9JkQwpjNppmkyHYFaB3POdX777OidCBXwQQhdpmv5GUdRisVhchxD+CCIVCRLkxGCMv+fz+SvOu6qq+wCAq0G0AgHU6/Xb8Xh8r1gsJp2knU5nOJ1O7wMAPvqFCASAMTYEQUgzDHOUz7IsqtVq9SGEmTMHwBg/5TjuCc/z7PFkvV5vYprmCwDAMz8QvhzQNG2HEKIDAM6tSoIxnrEsmy6VSuNNIXwBYIzf8zx/h+O4lfqmaVKGYbyTJOnu1gEajca1aDT6pVKpXFgnriiKadv2riRJ+5tAbOwAxvigUChcYtk/pv6fHJPJhOp2uwcAgMtbA0AI3UskEm9yudzOJqKqqpLRaPSgWq2+9Rq/kQMIoUNRFFmapr30jr7btk01m80xhDDhFeAJgBB6mUqlHqbT6fNeYse/9/v9w8Fg8BpC+Hhd3FoAjHEhEok0RFGM+0m+HCvL8tiyLKlWq/06KX4tgCzLn7PZ7I1EwtPJlfqEEErX9U8AgJu+ATDGuwzDfBAEIRXk75cxiqIM5vP5LQjh11U6JzqAEGqWy+VKLBY7TX5qNptR7Xb7JwBA+r8AQp8Cx65QF6EDEPo2dCCcgyiZTD7KZDLrL4G/VphhGJPhcPjqVAfRUjPUo9h1wddlpGkaIYRs7zJy10N417EDEHpB4roQXknmAIRelLourCzLdV2fEkKen2lZvtyWoTYmDkTorZk7FeE1p+7htJX2/DfV7WYwLPkGlAAAAABJRU5ErkJggg==',\n  square: ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAp0lEQVRYR+2WMQ4CIRBFWQoyFQ03YG7naqPHsNEY9XLADSjooFrD1mJixmRj8qlh/ssbij+pjc+0cb4CAAx8NBBCOGitjfCjVu/9fTRjCNDDiehKRKI1tdaWWuuemR/vIIbDU0ona+3ZOScCyDkvpZQjM18AAAMwAAMwAAMw8HcGZmPM7UeFZGbm51cG+uUY404pJa1kbRTeM0RtR9gV1+cAgIHNDbwAdNviIRMkcw0AAAAASUVORK5CYII=',\n  'triangle-down': ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC2klEQVRYR+2WPWzTQBiGnR/iFrs4pFadpolyn09VJZAYOjDQCYmFiYVKIDHQgRWxMCAhIaSuHWCEAXWknZAQG1IHJAbEAggGcpc4bVK3Sdu0SUwSXBu5clHTpk7sJC0D3uLcfe9z730/9jGn/PhOWZ/5dwAURblgGEbiJBzx+XxZhNAPS+uvA5RSJRQK8f0GME3Tp+v6NgBAEwAh5DbHcS8lSeL6CbG2tlbVNG1GluXFJgDrRyaT+SZJ0sWBgYG+MNRqNUZV1a8AcGlfoCkJM5nMZCAQWIrH40P9IFheXq7ouj4ly/KXlgC2C4uRSOTm0FBvGXZ2dpjNzc3XAHDr4OGOlGE+nz9bq9W2ACDUSxcopbphGPz4+HjdEcD6M51OP+F5/pEoimwvIIrFYr1cLs/Ksjx7ON6xjSidTm/E4/FIMBjsikHXdWZlZWUDAMRWgZwAbrAsOz86Oip0Q6Cq6ramaXcwxm9dAdhX8VmSpMnBwUFPDJqmMcVi8VMymbx8XADHWUApnfD7/VYATyWRzWatspvEGP/0BGBtUhRlXhCEaUEQXNlQKpV+lUqlBQC462RfR9OQEGLKsuzqGiilDMa4bfy2C+zm9JDjuMeiKJ7rhKJQKJQ1TXuKEJprt74jADshV2OxWDQUcu5PjUaDyefzqwAQayd+ZBg5bSCEXGNZdmFsbOy807pcLrdVr9enMcbvewpgJ+SH4eHhKY5rPbGr1SpTKBSWAOBqJ+KuHLAWp1KpRDAY/J5MJlt+uCiKUg0EAhOJRCLXFwA7F56Fw+F74XC4qSztsnsBAA86FXftwH5gQkgDIXTG7/fvvTIMw/qY+Y0xdj1BO66Cg6cihMzwPP98ZGRk7yrW19crlUrlPsb4lZvTe3bA7g0kGo3udSdVVSlCCLsV7woglUpdYVn2nRVkd3f3OkLo44kC2GX5xjRNKx+mvYh35YBXwcP7PCVhr8T/O2A58AfGZw8wtSahoQAAAABJRU5ErkJggg==',\n  'triangle-up': ',iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC3UlEQVRYR+2VP2gTURzHLyG5tOnFXD0uJsTj3u9dB4s4iIIOIk5uDnUQQdChuApOBScFh4KDg4uDOgkKKoKO4iAI4lIciiD03rtoSnOJTbzcJTmS651EraTm312a2qVvvd/v+/2873vvdyFml1dol/2ZPYBtJUApfdk+QgCYG/UoRwZQVfVULBZ77Xke02w2zymK8n4UiJEBKKU0k8mgtmmhUKAIIfzfAAgh8xzH3RVFMdE2LRaLZq1Wu44xfhgUYqQEVFVtAUAkFPrd7rouo2maoyhKdMcBCCH3eJ6fn56enuw0q1QqjWq1+gAhdC0IRKAECCFyOBxelmWZ62WSy+WsjY2Nw4qifPULEQhA07QPoiiejMfjPfVrtRpTKpXeAcCZsQMQQs6yLPskm83uHyS+urpabjabFzHGb/xA+E6AUlrIZrMHotHB96zVajH5fF7HGKfHBkApXZiamrohiuI+P6KlUqlar9dvI4TuDKsfmoDneWFCSAtjHB4m1vmdEOIpijK0ZyiApmmPeZ6fSyaTvW9eHyrDMOqGYTyXZfnKIPCBAJqmzTIM81GW5V8TL+jK5XKG67onMMZf+vUOA1hKpVJHJye3zBzfHI1Gg9F1fQkAjgUGWFlZmYvH448ymQzv27FH4drammHb9mWM8ateOn0TIIRUJEniI5HIdvwZx3Haz7IMAIJvAErpzUQisSAIwsS23P80r6+v26ZpLgLArX/1uhIoFoucZVnfASA2DvNNjfZTZlk2KUlSo1O3C4BS+kIQhPOJxEgXvy+zaZpMuVx+hhC60BdAVdXj0Wj0rSRJviZe0ITy+bzpOM5pAPi02bslAUrp53Q6PTsxMZaj7+Kzbbv9LJcRQke6AFRVvcRx3P1UKtXzXx90t/3qdV23LMu6OjMz87Rd8zcBQojGsuyORN8J43leyHGcHwAAWwAopYdc1z04rp0OnP+h0LfN8Tz0Z7TTQHsAPwHv3BIw9zTkUQAAAABJRU5ErkJggg=='\n};\n\nvar Texture$1 = function () {\n  function Texture$$1(symbolType) {\n    classCallCheck(this, Texture$$1);\n    this.symbolType = symbolType;\n  }\n\n  createClass(Texture$$1, [{\n    key: 'load',\n    value: function load() {\n      // Load a texture synchronously\n      var image = new Image();\n      image.src = 'data:image/png;base64' + imageData[this.symbolType];\n      var texture = new Texture(image);\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }]);\n  return Texture$$1;\n}();\n\nvar symbolTypes = Object.keys(imageData);\n/*\n * Utility functions\n */\n\nfunction getCanvasColor(color) {\n  return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n}\n\nvar RARE = 'other';\n\nfunction getDataType(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  if (type === 'number') {\n    type = 'int';\n\n    if (!Number.isInteger(value)) {\n      type = 'float';\n    }\n  }\n\n  return type;\n}\n\nfunction orderArray(arr, indices) {\n  // Reorder arr based on indices\n  var orderedArr = new Array(arr.length);\n\n  for (var i = 0; i < arr.length; i++) {\n    orderedArr[i] = arr[indices[i]];\n  }\n\n  return orderedArr;\n}\n\nfunction encodeRareCategories(arr, k) {\n  // Count occurrences of each unique categories in arr,\n  // then keep top k and encode rare categories as 'rares'\n  var counts = _.countBy(arr); // sort values\n\n\n  counts = _.sortBy(_.pairs(counts), function (tuple) {\n    return -tuple[1];\n  }); // get top k frequent categories\n\n  var frequentCategories = _.map(counts.slice(0, k), function (tuple) {\n    return tuple[0];\n  });\n\n  for (var i = 0; i < arr.length; i++) {\n    if (frequentCategories.indexOf(arr[i]) === -1) {\n      arr[i] = RARE;\n    }\n  }\n\n  return arr;\n}\n\nfunction binValues(arr, nbins) {\n  // Binning continues array of values in to nbins\n  var extent = d3.extent(arr);\n  var min = parseFloat(extent[0]);\n  var max = parseFloat(extent[1]);\n  var interval = (max - min) / nbins; // bin width\n\n  var domain = _.range(1, nbins).map(function (i) {\n    return i * interval + min;\n  }); // bin edges\n\n\n  var labels = [min.toFixed(2) + ' to ' + domain[0].toFixed(2)];\n\n  for (var i = 0; i < nbins - 1; i++) {\n    if (i === nbins - 2) {\n      // the last bin\n      var label = domain[i].toFixed(2) + ' to ' + max.toFixed(2);\n    } else {\n      var label = domain[i].toFixed(2) + ' to ' + domain[i + 1].toFixed(2);\n    }\n\n    labels.push(label);\n  }\n\n  return {\n    labels: labels,\n    domain: domain,\n    min: min,\n    max: max,\n    interval: interval\n  };\n}\n\nfunction binValues2(arr, domain) {\n  // Binning continues array of values by a given binEdges (domain)\n  // domain: [0.001, 0.01, 0.05, 0.1, 1]\n  // domain should include the largest (rightest) value\n  var extent = d3.extent(arr);\n  var min = parseFloat(extent[0]);\n  var max = parseFloat(extent[1]);\n  var labels = ['0 to ' + domain[0]];\n  var nbins = domain.length;\n\n  for (var i = 0; i < nbins - 1; i++) {\n    var label = domain[i] + ' to ' + domain[i + 1];\n    labels.push(label);\n  }\n\n  return {\n    labels: labels,\n    domain: domain.slice(0, -1),\n    min: min,\n    max: max\n  };\n}\n\nfunction binBy(list, key, nbins) {\n  // similar to _.groupBy but applying to continues values using `binValues`\n  // list: an array of objects\n  // key: name of the continues variable\n  // nbins: number of bins\n  var values = _.pluck(list, key);\n\n  var binnedValues = binValues(values, nbins);\n  var labels = binnedValues.labels;\n  var min = binnedValues.min;\n  var interval = binnedValues.interval;\n\n  var grouped = _.groupBy(list, function (obj) {\n    var i = Math.floor((obj[key] - min) / interval);\n\n    if (i === nbins) {\n      // the max value\n      i = nbins - 1;\n    }\n\n    return labels[i];\n  });\n\n  return grouped;\n}\n\nfunction binBy2(list, key, domain) {\n  // wrapper for `binValuesBy`\n  var values = _.pluck(list, key);\n\n  var binnedValues = binValues2(values, domain);\n  var labels = binnedValues.labels;\n\n  var grouped = _.groupBy(list, function (obj) {\n    var i = _.filter(domain, function (edge) {\n      return edge < obj[key];\n    }).length;\n\n    return labels[i];\n  });\n\n  return grouped;\n}\n\nvar ScatterDataSubset = function () {\n  // \"model\" for PointsGeometry\n  function ScatterDataSubset(data) {\n    classCallCheck(this, ScatterDataSubset);\n    this.data = data;\n    this.n = data.length;\n\n    var _getIndicesAndPositio = this.getIndicesAndPositions(data),\n        indices = _getIndicesAndPositio.indices,\n        positions = _getIndicesAndPositio.positions;\n\n    this.indices = indices;\n    this.positions = positions;\n  }\n\n  createClass(ScatterDataSubset, [{\n    key: 'getIndicesAndPositions',\n    value: function getIndicesAndPositions(data) {\n      var n = this.n;\n      var indices = new Uint32Array(n);\n      var positions = new Float32Array(n * 3);\n\n      for (var i = 0; i < n; i++) {\n        indices[i] = i;\n        positions[i * 3] = data[i].x;\n        positions[i * 3 + 1] = data[i].y;\n        positions[i * 3 + 2] = data[i].z || 0;\n      }\n\n      return {\n        indices: indices,\n        positions: positions\n      };\n    }\n  }, {\n    key: 'getAttr',\n    value: function getAttr(metaKey) {\n      return this.data.map(function (record) {\n        return record[metaKey];\n      });\n    }\n  }]);\n  return ScatterDataSubset;\n}();\n\nvar PointsGeometry = function () {\n  function PointsGeometry(args) {\n    classCallCheck(this, PointsGeometry);\n    this.model = args.model;\n    this.geometry = null;\n    this.createGeometry();\n  }\n\n  createClass(PointsGeometry, [{\n    key: 'createGeometry',\n    value: function createGeometry() {\n      var geometry = new BufferGeometry();\n      var model = this.model;\n      geometry.setIndex(new BufferAttribute(model.indices, 1));\n      geometry.addAttribute('position', new BufferAttribute(model.positions, 3)); // this is used for tracking the original orders of the data objects in the entire ScatterData\n\n      geometry.userData = {\n        index: model.getAttr('index')\n      };\n      geometry.computeBoundingSphere();\n      this.geometry = geometry;\n    }\n  }]);\n  return PointsGeometry;\n}();\n\nvar ScatterData = function () {\n  function ScatterData(data) {\n    classCallCheck(this, ScatterData);\n    this.data = data;\n    this.n = data.length;\n    this.metas = [];\n    this.parse();\n\n    var _getIndicesAndPositio2 = this.getIndicesAndPositions(),\n        indices = _getIndicesAndPositio2.indices,\n        positions = _getIndicesAndPositio2.positions;\n\n    this.indices = indices;\n    this.positions = positions;\n  }\n\n  createClass(ScatterData, [{\n    key: 'parse',\n    value: function parse() {\n      var _this = this; // extract the meta data `metas` in the array of object\n\n\n      var data = this.data;\n      var xyz = ['x', 'y', 'z'];\n\n      var _loop = function _loop(key) {\n        if (xyz.indexOf(key) === -1) {\n          var values = data.map(function (o) {\n            return o[key];\n          });\n          var nUnique = [].concat(toConsumableArray(new Set(values))).length;\n          var type = getDataType(data[0][key]);\n\n          _this.metas.push({\n            name: key,\n            nUnique: nUnique,\n            type: type\n          });\n        }\n      };\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(data[0])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          _loop(key);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'getIndicesAndPositions',\n    value: function getIndicesAndPositions() {\n      var n = this.n;\n      var indices = new Uint32Array(n);\n      var positions = new Float32Array(n * 3);\n\n      for (var i = 0; i < n; i++) {\n        indices[i] = i;\n        positions[i * 3] = this.data[i].x;\n        positions[i * 3 + 1] = this.data[i].y;\n        positions[i * 3 + 2] = this.data[i].z || 0; // add index to the object\n\n        this.data[i].index = i;\n      }\n\n      return {\n        indices: indices,\n        positions: positions\n      };\n    }\n  }, {\n    key: 'getLabels',\n    value: function getLabels(labelKeys) {\n      // return an array of label texts given a list of labelKeys\n      var n = this.n;\n      var labels = new Array(n);\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var record = _step2.value;\n          var label = '';\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = labelKeys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var labelKey = _step3.value;\n              label += labelKey + ': ' + record[labelKey] + ' \\n';\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          labels[i] = label;\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return labels;\n    }\n  }, {\n    key: 'groupBy',\n    value: function groupBy(metaKey) {\n      // group by a metaKey and return an object of ScatterDataSubset objects keyed by metaKey\n      var dataSubsets = _.groupBy(this.data, metaKey);\n\n      var scatterDataSubsets = _.mapObject(dataSubsets, function (records, key) {\n        return new ScatterDataSubset(records);\n      });\n\n      return scatterDataSubsets;\n    }\n  }, {\n    key: 'binBy',\n    value: function binBy$$1(metaKey, nbins) {\n      var dataSubsets = binBy(this.data, metaKey, nbins);\n\n      var scatterDataSubsets = _.mapObject(dataSubsets, function (records, key) {\n        return new ScatterDataSubset(records);\n      });\n\n      return scatterDataSubsets;\n    }\n  }, {\n    key: 'binBy2',\n    value: function binBy2$$1(metaKey, domain) {\n      var dataSubsets = binBy2(this.data, metaKey, domain);\n\n      var scatterDataSubsets = _.mapObject(dataSubsets, function (records, key) {\n        return new ScatterDataSubset(records);\n      });\n\n      return scatterDataSubsets;\n    }\n  }, {\n    key: 'getAttr',\n    value: function getAttr(metaKey) {\n      return this.data.map(function (record) {\n        return record[metaKey];\n      });\n    }\n  }, {\n    key: 'setAttr',\n    value: function setAttr(key, values) {\n      for (var i = 0; i < this.n; i++) {\n        var rec = this.data[i];\n        rec[key] = values[i];\n        this.data[i] = rec;\n      } // add meta data of this new attr\n\n\n      this.metas.push({\n        name: key,\n        nUnique: [].concat(toConsumableArray(new Set(values))).length,\n        type: getDataType(values[0])\n      });\n    }\n  }, {\n    key: 'getColorOptions',\n    value: function getColorOptions() {\n      var _this2 = this;\n\n      var colorOptions = this.metas.filter(function (meta) {\n        return meta.nUnique < _this2.n && meta.nUnique > 1;\n      });\n      colorOptions = colorOptions.map(function (meta) {\n        return {\n          value: meta.name,\n          label: meta.name\n        };\n      });\n      return colorOptions;\n    }\n  }, {\n    key: 'getShapeOptions',\n    value: function getShapeOptions() {\n      var shapeOptions = this.metas.filter(function (meta) {\n        return meta.type !== 'float' && meta.nUnique < 7 && meta.nUnique > 1;\n      });\n      shapeOptions = shapeOptions.map(function (meta) {\n        return {\n          value: meta.name,\n          label: meta.name\n        };\n      });\n      return shapeOptions;\n    }\n  }, {\n    key: 'getSearchOptions',\n    value: function getSearchOptions(labelKeys) {\n      var _this3 = this; // labelKeys: array of strings\n      // return an array of objects as input for Select.options\n\n\n      var allLabels = [];\n\n      var _loop2 = function _loop2(labelKey) {\n        var labels = _this3.getAttr(labelKey); // take the unique values\n\n\n        labels = [].concat(toConsumableArray(new Set(labels)));\n        labels = labels.map(function (x) {\n          return {\n            value: x,\n            label: x,\n            key: labelKey\n          };\n        });\n        labels = {\n          label: labelKey,\n          options: labels\n        };\n        allLabels.push(labels);\n      };\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = labelKeys[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var labelKey = _step4.value;\n\n          _loop2(labelKey);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return allLabels;\n    }\n  }, {\n    key: 'calculateColorScale',\n    value: function calculateColorScale(metaKey) {\n      // Color points by a certain metaKey\n      // update colorKey\n      var metas = this.getAttr(metaKey);\n\n      var meta = _.findWhere(this.metas, {\n        name: metaKey\n      });\n\n      var dtype = meta.type;\n\n      if (dtype !== 'float' && dtype !== 'int' && meta.nUnique > 20) {\n        metas = encodeRareCategories(metas, 19);\n      }\n\n      var uniqueCats = new Set(metas);\n      var nUniqueCats = uniqueCats.size;\n      uniqueCats = Array.from(uniqueCats); // Make unknown to be gray\n\n      if (uniqueCats.indexOf('unknown') !== -1) {\n        if (uniqueCats.length > 7) {\n          var idx = uniqueCats.indexOf('unknown');\n          var greyIdx = 7;\n\n          if (uniqueCats.length === 20) {\n            greyIdx = 15;\n          }\n\n          var elem = uniqueCats[greyIdx];\n          uniqueCats[greyIdx] = 'unknown';\n          uniqueCats[idx] = elem;\n        }\n      } // Make RARE to be grey\n\n\n      if (uniqueCats.indexOf(RARE) !== -1) {\n        if (uniqueCats.length === 20) {\n          var _idx = uniqueCats.indexOf(RARE);\n\n          var greyIdx2 = 15;\n\n          if (uniqueCats.indexOf('unknown') !== -1) {\n            greyIdx2 = 14;\n          }\n\n          var _elem = uniqueCats[greyIdx2];\n          uniqueCats[greyIdx2] = RARE;\n          uniqueCats[_idx] = _elem;\n        }\n      } // make colorScale\n\n\n      var colorExtent = d3.extent(metas);\n      var minScore = colorExtent[0];\n      var maxScore = colorExtent[1];\n      var colorScale = d3.scale.pow().domain([minScore, (minScore + maxScore) / 2, maxScore]).range(['#1f77b4', '#ddd', '#d62728']);\n\n      if (dtype === 'boolean') {\n        colorScale = d3.scale.ordinal().domain([true, false]).range(['#cc0000', '#cccccc']);\n      } else if (nUniqueCats < 11) {\n        colorScale = d3.scale.category10().domain(uniqueCats);\n      } else if (nUniqueCats > 10 && nUniqueCats <= 20) {\n        colorScale = d3.scale.category20().domain(uniqueCats);\n      } else if (nUniqueCats <= 40) {\n        var colors40 = ['#1b70fc', '#faff16', '#d50527', '#158940', '#f898fd', '#24c9d7', '#cb9b64', '#866888', '#22e67a', '#e509ae', '#9dabfa', '#437e8a', '#b21bff', '#ff7b91', '#94aa05', '#ac5906', '#82a68d', '#fe6616', '#7a7352', '#f9bc0f', '#b65d66', '#07a2e6', '#c091ae', '#8a91a7', '#88fc07', '#ea42fe', '#9e8010', '#10b437', '#c281fe', '#f92b75', '#07c99d', '#a946aa', '#bfd544', '#16977e', '#ff6ac8', '#a88178', '#5776a9', '#678007', '#fa9316', '#85c070', '#6aa2a9', '#989e5d', '#fe9169', '#cd714a', '#6ed014', '#c5639c', '#c23271', '#698ffc', '#678275', '#c5a121', '#a978ba', '#ee534e', '#d24506', '#59c3fa', '#ca7b0a', '#6f7385', '#9a634a', '#48aa6f', '#ad9ad0', '#d7908c', '#6a8a53', '#8c46fc', '#8f5ab8', '#fd1105', '#7ea7cf', '#d77cd1', '#a9804b', '#0688b4', '#6a9f3e', '#ee8fba', '#a67389', '#9e8cfe', '#bd443c', '#6d63ff', '#d110d5', '#798cc3', '#df5f83', '#b1b853', '#bb59d8', '#1d960c', '#867ba8', '#18acc9', '#25b3a7', '#f3db1d', '#938c6d', '#936a24', '#a964fb', '#92e460', '#a05787', '#9c87a0', '#20c773', '#8b696d', '#78762d', '#e154c6', '#40835f', '#d73656', '#1afd5c', '#c4f546', '#3d88d8', '#bd3896', '#1397a3', '#f940a5', '#66aeff', '#d097e7', '#fe6ef9', '#d86507', '#8b900a', '#d47270', '#e8ac48', '#cf7c97', '#cebb11', '#718a90', '#e78139', '#ff7463', '#bea1fd'];\n        colorScale = d3.scale.ordinal().range(colors40).domain(uniqueCats);\n      }\n\n      return colorScale;\n    }\n  }, {\n    key: 'calculateShapeScale',\n    value: function calculateShapeScale(metaKey) {\n      var symbols = d3.svg.symbolTypes.map(function (t) {\n        return d3.svg.symbol().type(t)();\n      }); // make shapeScale for d3.legend\n\n      var meta = _.findWhere(this.metas, {\n        name: metaKey\n      }); // categorical data\n      // get grouped datasets, each group is going to be a cloud\n\n\n      var scatterDataSubsets = this.groupBy(metaKey);\n      var shapeLabels = void 0;\n      var shapeScale = d3.scale.ordinal().domain(Object.keys(scatterDataSubsets)).range(symbols);\n\n      if (['int', 'float'].indexOf(meta.type) !== -1 && meta.nUnique > 6) {\n        // get grouped datasets, each group is going to be a cloud\n        scatterDataSubsets = this.binBy(metaKey, 6); // Make a threshold scale\n\n        var binnedValues = binValues(_.pluck(this.data, metaKey), 6);\n\n        if (meta.name === 'p-value') {\n          // get grouped datasets, each group is going to be a cloud\n          var pValueDomain = [0.001, 0.01, 0.05, 0.1, 1];\n          scatterDataSubsets = this.binBy2(metaKey, pValueDomain); // Make a threshold scale\n\n          binnedValues = binValues2(_.pluck(this.data, metaKey), pValueDomain); // overwrite the symbols map to make it having the same length with pValueDomain\n\n          symbols = _.map(d3.svg.symbolTypes.slice(0, pValueDomain.length), function (t) {\n            return d3.svg.symbol().type(t)();\n          });\n        }\n\n        shapeScale = d3.scale.threshold().domain(binnedValues.domain).range(symbols);\n        shapeLabels = binnedValues.labels;\n      }\n\n      return {\n        shapeScale: shapeScale,\n        shapeLabels: shapeLabels,\n        scatterDataSubsets: scatterDataSubsets\n      };\n    }\n  }]);\n  return ScatterData;\n}();\n\nvar Scatter3dView = function (_React$Component) {\n  inherits(Scatter3dView, _React$Component);\n\n  function Scatter3dView(props) {\n    classCallCheck(this, Scatter3dView);\n\n    var _this4 = possibleConstructorReturn(this, (Scatter3dView.__proto__ || Object.getPrototypeOf(Scatter3dView)).call(this, props));\n\n    var is3d = _this4.props.is3d;\n    _this4.state = {\n      isLoading: false,\n      isLoaded: false,\n      url: _this4.props.url,\n      data: _this4.props.data,\n      model: null,\n      WIDTH: _this4.props.width || 1400,\n      HEIGHT: _this4.props.height || 800,\n      DPR: _this4.props.DPR || 2,\n      labelKeys: _this4.props.labelKeys,\n      // which metaKey to use as labels\n      colorKey: _this4.props.colorKey,\n      // which metaKey to use as colors\n      shapeKey: _this4.props.shapeKey,\n      pointSize: is3d ? 0.5 : 12,\n      // the size of the points\n      is3d: is3d,\n      // 3d or 2d\n      colorScale: _this4.props.colorScale,\n      shapeScale: _this4.props.shapeScale,\n      shapeLabels: _this4.props.shapeLabels // events\n\n    };\n    _this4.handleMouseMove = _this4.handleMouseMove.bind(_this4);\n    _this4.handleMouseClick = _this4.handleMouseClick.bind(_this4);\n    return _this4;\n  }\n\n  createClass(Scatter3dView, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this5 = this; // fetch data from url\n\n\n      if (this.props.url) {\n        // url is given\n        this.setState({\n          isLoading: true\n        });\n        fetch(this.props.url).then(function (response) {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('Something went wrong when fetching data ...');\n          }\n        }).then(function (data) {\n          _this5.setState({\n            data: data,\n            model: new ScatterData(data),\n            // init model\n            isLoading: false,\n            isLoaded: true\n          });\n\n          _this5.makeMaterial();\n\n          _this5.setUpStage();\n\n          _this5.shapeBy(_this5.state.shapeKey);\n\n          _this5.renderScatter();\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this6 = this;\n\n      if (!this.props.url) {\n        // only trigger rendering when url is not set directly to prop\n        // data is set via parent compoent\n        if (prevState.data === null && prevProps.data === null && this.props.data !== null && this.state.data === null) {\n          this.makeMaterial();\n          this.setUpStage();\n        } else if (this.props.data !== null && this.props.shapeScale !== null) {\n          this.shapeBy(this.props.shapeKey); // will update state shapeScale etc.\n\n          this.renderScatter();\n\n          if (this.state.is3d) {\n            this.startAnimate();\n          } else {\n            // sometimes the canvas doesn't show\n            setTimeout(function () {\n              return _this6.renderScatter();\n            }, 500);\n          }\n        } else if (this.props.colorKey !== prevProps.colorKey) {\n          // colorKey changed through parent state passed as prop\n          this.renderScatter();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this.animateId) {\n        this.stopAnimate();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this7 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref) {\n          return _this7.mount = _ref;\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this7.handleMouseMove(e);\n        },\n        onClick: function onClick(e) {\n          return _this7.handleMouseClick(e);\n        }\n      });\n    }\n  }, {\n    key: 'setUpStage',\n    value: function setUpStage() {\n      var _this8 = this; // set up THREE.js visualization components\n\n\n      var _state = this.state,\n          WIDTH = _state.WIDTH,\n          HEIGHT = _state.HEIGHT,\n          DPR = _state.DPR;\n      var aspectRatio = WIDTH / HEIGHT; // set up scene, camera, renderer\n\n      var scene = new Scene(); // set the id for this object\n\n      this.id = scene.uuid;\n      var renderer = new WebGLRenderer();\n      renderer.setClearColor(0xffffff);\n      renderer.setPixelRatio(DPR);\n      renderer.setSize(WIDTH, HEIGHT); // 2d\n\n      var ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 10.5;\n      var left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n      var right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n      var bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n      var top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT; // Scale up the larger of (w, h) to match the aspect ratio.\n\n      if (aspectRatio > 1) {\n        left *= aspectRatio;\n        right *= aspectRatio;\n      } else {\n        top /= aspectRatio;\n        bottom /= aspectRatio;\n      }\n\n      var camera = new OrthographicCamera(left, right, top, bottom, -1000, 1000);\n\n      if (this.state.is3d) {\n        camera = new PerspectiveCamera(70, aspectRatio, 0.01, 1000000);\n        camera.position.z = 30;\n      } // Put the renderer's DOM into the container\n\n\n      renderer.domElement.id = 'renderer-' + this.id;\n      this.mount.appendChild(renderer.domElement); // set up orbit controls\n\n      var controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableZoom = true;\n      controls.screenSpacePanning = true;\n\n      if (!this.state.is3d) {\n        controls.enableRotate = false;\n        controls.mouseButtons = {\n          LEFT: MOUSE.RIGHT,\n          MIDDLE: MOUSE.DOLLY,\n          RIGHT: MOUSE.LEFT\n        };\n      }\n\n      controls.addEventListener('change', function (e) {\n        _this8.renderScatter();\n      }); // set up raycaster, mouse\n\n      var raycaster = new Raycaster();\n\n      if (this.state.raycasterThreshold) {\n        raycaster.params.Points.threshold = this.raycasterThreshold;\n      } else {\n        if (this.state.is3d) {\n          raycaster.params.Points.threshold = this.state.pointSize / 5;\n        } else {\n          raycaster.params.Points.threshold = this.state.pointSize / 500;\n        }\n      }\n\n      var mouse = new Vector2(); // bind three js objects to component\n\n      this.scene = scene;\n      this.renderer = renderer;\n      this.camera = camera;\n      this.controls = controls;\n      this.raycaster = raycaster;\n      this.mouse = mouse;\n    }\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(e) {\n      var mouse = this.mouse;\n      var _state2 = this.state,\n          WIDTH = _state2.WIDTH,\n          HEIGHT = _state2.HEIGHT;\n      mouse.x = e.nativeEvent.offsetX / WIDTH * 2 - 1;\n      mouse.y = -(e.nativeEvent.offsetY / HEIGHT) * 2 + 1;\n      this.mouse = mouse;\n      this.renderScatter();\n    }\n  }, {\n    key: 'handleMouseClick',\n    value: function handleMouseClick(e) {\n      this.stopAnimate();\n\n      if (e.shiftKey && typeof this.props.mouseShiftClickCallback === 'function') {\n        this.mouseShiftClick(this.props.mouseShiftClickCallback);\n      }\n    }\n  }, {\n    key: 'makeMaterial',\n    value: function makeMaterial() {\n      var materials = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = symbolTypes[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var symbolType = _step5.value;\n          var textureResult = new Texture$1(symbolType).load();\n          var material = new PointsMaterial({\n            vertexColors: VertexColors,\n            size: this.state.pointSize,\n            sizeAttenuation: this.state.is3d,\n            map: textureResult,\n            alphaTest: 0.2,\n            transparent: true,\n            opacity: 0.6\n          });\n          materials.push(material);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.materials = materials;\n    }\n  }, {\n    key: 'clearScene',\n    value: function clearScene() {\n      var scene = this.scene;\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = scene.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var child = _step6.value;\n          scene.remove(child);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'shapeBy',\n    value: function shapeBy(metaKey) {\n      var model = this.props.model;\n      var scene = this.scene;\n\n      var _model$calculateShape = model.calculateShapeScale(metaKey),\n          scatterDataSubsets = _model$calculateShape.scatterDataSubsets; // Update geometry by merging individual genmetries from each group\n\n\n      var geometries = [];\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = Object.keys(scatterDataSubsets)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          var geometry = new PointsGeometry({\n            model: scatterDataSubsets[key]\n          });\n          geometries.push(geometry.geometry);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var mergedGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries); // concat all indices from each geometry\n\n      var arrayOfIndices = geometries.map(function (g) {\n        return g.userData.index;\n      });\n      var indices = arrayOfIndices.reduce(function (arr1, arr2) {\n        return arr1.concat(arr2);\n      });\n      var labels = model.getLabels(this.state.labelKeys);\n      labels = orderArray(labels, indices);\n      mergedGeometry.userData = {\n        index: indices,\n        labels: labels\n      };\n      var groupSizes = geometries.map(function (g) {\n        return g.index.length;\n      }); // to keep track of the cumulative sums of the group sizes, prepended by -1\n\n      var cumsums = groupSizes.reduce(function (a, x, i) {\n        return [].concat(toConsumableArray(a), [x + (a[i - 1] || 0)]);\n      }, []);\n      cumsums.unshift(-1);\n\n      for (var i = 0; i < geometries.length; i++) {\n        mergedGeometry.addGroup(cumsums[i] + 1, groupSizes[i], i);\n      }\n\n      var points = new Points(mergedGeometry, this.materials); // clear clouds\n\n      this.clearScene();\n      scene.add(points);\n      this.points = points; // set colors\n\n      this.setColors(this.props.colorScale, this.props.colorKey);\n    }\n  }, {\n    key: 'renderScatter',\n    value: function renderScatter() {\n      var raycaster = this.raycaster,\n          mouse = this.mouse,\n          camera = this.camera,\n          renderer = this.renderer,\n          scene = this.scene; // update the picking ray with the camera and mouse position\n\n      raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n      var intersects = raycaster.intersectObjects([this.points]); // reset colors\n\n      this.resetColors(); // remove text-label if exists\n\n      var textLabel = document.getElementById('text-label-' + this.id);\n\n      if (textLabel) {\n        textLabel.remove();\n      } // add interactivities if there is intesecting points\n\n\n      if (intersects.length > 0) {\n        // only highlight the closest object\n        var intersect = intersects[0];\n        var idx = intersect.index;\n        var geometry = intersect.object.geometry; // change color of the point\n\n        geometry.attributes.color.needsUpdate = true;\n        geometry.attributes.color.array[idx * 3] = 0.1;\n        geometry.attributes.color.array[idx * 3 + 1] = 0.8;\n        geometry.attributes.color.array[idx * 3 + 2] = 0.1; // find the position of the point\n\n        var pointPosition = {\n          x: geometry.attributes.position.array[idx * 3],\n          y: geometry.attributes.position.array[idx * 3 + 1],\n          z: geometry.attributes.position.array[idx * 3 + 2] // add text canvas\n\n        };\n        var textCanvas = this.makeTextCanvas(geometry.userData.labels[idx], pointPosition.x, pointPosition.y, pointPosition.z, this.points.rotation, {\n          fontsize: 24,\n          fontface: 'arial, sans-serif',\n          textColor: {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0.8\n          }\n        });\n        textCanvas.id = 'text-label-' + this.id;\n        this.mount.appendChild(textCanvas);\n      }\n\n      renderer.render(scene, camera);\n    }\n  }, {\n    key: 'makeTextCanvas',\n    value: function makeTextCanvas(message, x, y, z, euler, parameters) {\n      if (parameters === undefined) parameters = {};\n      var fontface = parameters.hasOwnProperty('fontface') ? parameters['fontface'] : 'arial, sans-serif';\n      var fontsize = parameters.hasOwnProperty('fontsize') ? parameters['fontsize'] : 18;\n      var textColor = parameters.hasOwnProperty('textColor') ? parameters['textColor'] : {\n        r: 0,\n        g: 0,\n        b: 255,\n        a: 0.8\n      };\n      var lineHeight = parameters.hasOwnProperty('lineHeight') ? parameters['lineHeight'] : 20;\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var _state3 = this.state,\n          WIDTH = _state3.WIDTH,\n          HEIGHT = _state3.HEIGHT;\n      canvas.width = WIDTH;\n      canvas.height = HEIGHT;\n      context.font = fontsize + 'px ' + fontface;\n      context.textBaseline = 'alphabetic';\n      context.textAlign = 'left'; // text color.  Note that we have to do this AFTER the round-rect as it also uses the \"fillstyle\" of the canvas\n\n      context.fillStyle = getCanvasColor(textColor); // calculate the project of 3d point into 2d plain\n\n      var point = new Vector3(x, y, z).applyEuler(euler);\n      var pv = new Vector3().copy(point).project(this.camera);\n      var coords = {\n        x: (pv.x + 1) / 2 * WIDTH,\n        // * this.DPR,\n        y: -((pv.y - 1) / 2 * HEIGHT) // * this.DPR\n        // draw the text (in multiple lines)\n\n      };\n      var lines = message.split('\\n');\n\n      for (var i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], coords.x, coords.y + i * lineHeight);\n      } // styles of canvas element\n\n\n      canvas.style.left = 0;\n      canvas.style.top = 0;\n      canvas.style.position = 'absolute';\n      canvas.style.pointerEvents = 'none';\n      return canvas;\n    }\n  }, {\n    key: 'resetColors',\n    value: function resetColors() {\n      this.setColors(this.props.colorScale, this.props.colorKey);\n    }\n  }, {\n    key: 'setColors',\n    value: function setColors(colorScale, metaKey) {\n      // Color points by a certain metaKey given colorScale\n      var model = this.props.model;\n      var metas = model.getAttr(metaKey);\n      var geometry = this.points.geometry;\n      var idx = geometry.userData.index;\n      metas = orderArray(metas, idx);\n\n      var meta = _.findWhere(model.metas, {\n        name: metaKey\n      });\n\n      var dtype = meta.type;\n\n      if (dtype !== 'float' && dtype !== 'int' && meta.nUnique > 20) {\n        metas = encodeRareCategories(metas, 19);\n      } // construct colors BufferAttribute\n\n\n      var colors = new Float32Array(model.n * 3);\n      var frequentCategories = {\n        length: 2\n      };\n\n      if (colorScale.hasOwnProperty('domain')) {\n        frequentCategories = colorScale.domain().slice();\n      }\n\n      for (var i = metas.length - 1; i >= 0; i--) {\n        var color = colorScale(metas[i]);\n        color = new Color(color);\n        color.toArray(colors, i * 3);\n      }\n\n      if (frequentCategories.length > 3) {\n        for (var _i = metas.length - 1; _i >= 0; _i--) {\n          var _color = colorScale(metas[_i]);\n\n          if (frequentCategories.indexOf(metas[_i]) === -1) {\n            _color = colorScale(RARE);\n          }\n\n          _color = new Color(_color);\n\n          _color.toArray(colors, _i * 3);\n        }\n      }\n\n      geometry.addAttribute('color', new BufferAttribute(colors.slice(), 3));\n    }\n  }, {\n    key: 'startAnimate',\n    value: function startAnimate() {\n      if (!this.animateId) {\n        this.animate();\n      }\n    }\n  }, {\n    key: 'animate',\n    value: function animate() {\n      var _this9 = this;\n\n      this.rotate();\n      this.animateId = window.requestAnimationFrame(function () {\n        return _this9.animate();\n      });\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate() {\n      var time = Date.now() * 0.001;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = this.scene.children[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var child = _step8.value;\n          child.rotation.x = time * 0.05;\n          child.rotation.y = time * 0.1;\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this.renderScatter();\n    }\n  }, {\n    key: 'stopAnimate',\n    value: function stopAnimate() {\n      window.cancelAnimationFrame(this.animateId);\n    }\n  }, {\n    key: 'highlightQuery',\n    value: function highlightQuery(metaKey, query) {\n      // To highlight a query result by adding a new PointsGeometry\n      // instance to the scene\n      this.removeHighlightedPoints(); // get the reordered data in geometry\n\n      var reorderedData = orderArray(this.props.model.data, this.points.geometry.userData.index); // find the matched data points\n\n      var matchedData = reorderedData.filter(function (rec) {\n        return rec[metaKey] === query;\n      });\n      var dataSubset = new ScatterDataSubset(matchedData);\n      var highlightCould = this.createHighlightCloud(dataSubset);\n      highlightCould.name = 'highlight-' + this.id;\n      this.scene.add(highlightCould);\n      this.renderScatter();\n    }\n  }, {\n    key: 'createHighlightCloud',\n    value: function createHighlightCloud(dataSubset) {\n      // dataSubset should be a ScatterDataSubset instance\n      var geometryHighlight = new PointsGeometry({\n        model: dataSubset\n      });\n      var material = new PointsMaterial({\n        size: this.state.pointSize * 5,\n        sizeAttenuation: this.state.is3d,\n        map: this.materials[0].map,\n        transparent: true,\n        opacity: 0.4,\n        color: 0xffff00\n      });\n      var highlightPoints = new Points(geometryHighlight.geometry, material); // update rotation\n\n      highlightPoints.rotation.x = this.points.rotation.x;\n      highlightPoints.rotation.y = this.points.rotation.y;\n      return highlightPoints;\n    }\n  }, {\n    key: 'removeHighlightedPoints',\n    value: function removeHighlightedPoints() {\n      var scene = this.scene;\n      scene.remove(scene.getObjectByName('highlight-' + this.id));\n      this.renderScatter();\n    }\n  }, {\n    key: 'mouseShiftClick',\n    value: function mouseShiftClick(callback) {\n      // fire when shift + click\n      var raycaster = this.raycaster,\n          mouse = this.mouse,\n          camera = this.camera; // update the picking ray with the camera and mouse position\n\n      raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n      var intersects = raycaster.intersectObjects([this.points]);\n\n      if (intersects.length > 0) {\n        var intersect = intersects[0];\n        var idx = intersect.index;\n        var trueIdx = intersect.object.geometry.userData.index[idx];\n        var datum = this.props.model.data[trueIdx];\n        callback(datum);\n      }\n    }\n  }]);\n  return Scatter3dView;\n}(React.Component);\n/*\nThe widgets for the interactive scatter plot.\n*/\n\n\nvar Legend = function (_React$Component) {\n  inherits(Legend, _React$Component);\n\n  function Legend(props) {\n    classCallCheck(this, Legend);\n\n    var _this = possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, props));\n\n    _this.state = {\n      width: _this.props.width || 300,\n      height: _this.props.height || 800\n    };\n    return _this;\n  }\n\n  createClass(Legend, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setUpDOMs();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.colorScale !== this.props.colorScale) {\n        this.displayColorLegend(this.props.colorScale, this.props.colorKey);\n      }\n\n      if (prevProps.shapeScale !== this.props.shapeScale) {\n        this.displayShapeLegend(this.props.shapeScale, this.props.shapeKey, this.props.shapeLabels);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref) {\n          return _this2.mount = _ref;\n        } // onMouseMove={e => this.handleMouseMove(e)}\n\n      });\n    }\n  }, {\n    key: 'setUpDOMs',\n    value: function setUpDOMs() {\n      // set up DOMs for the legends\n      var _state = this.state,\n          width = _state.width,\n          height = _state.height;\n      this.el = d3.select(this.mount).append('svg').attr('id', 'legend').attr('width', width).attr('height', height);\n      this.g = this.el.append('g').attr('class', 'legend').attr('transform', 'translate(10, 20)');\n      this.g.append('g').attr('id', 'legendShape').attr('class', 'legendPanel').attr('transform', 'translate(0, 0)');\n      this.g.append('g').attr('id', 'legendColor').attr('class', 'legendPanel').attr('transform', 'translate(110, 0)'); // styles\n\n      this.mount.style.position = 'absolute';\n      this.mount.style.zIndex = 10;\n      this.mount.style.overflow = 'visible';\n      this.mount.style.left = 0;\n      this.mount.style.top = 0;\n    }\n  }, {\n    key: 'displayShapeLegend',\n    value: function displayShapeLegend(shapeScale, shapeKey, shapeLabels) {\n      var legendShape = legend.symbol().scale(shapeScale).orient('vertical').title(shapeKey);\n\n      if (shapeLabels) {\n        legendShape.labels(shapeLabels);\n      }\n\n      this.g.select('#legendShape').call(legendShape);\n    }\n  }, {\n    key: 'displayColorLegend',\n    value: function displayColorLegend(colorScale, colorKey) {\n      var legendColor = legend.color().title(colorKey).shapeWidth(20).cells(5).labelFormat(d3.format('.2f')).scale(colorScale);\n      this.g.select('#legendColor').call(legendColor);\n    }\n  }]);\n  return Legend;\n}(React.Component);\n\nvar SelectDropdown = function (_React$Component2) {\n  inherits(SelectDropdown, _React$Component2);\n\n  function SelectDropdown(props) {\n    classCallCheck(this, SelectDropdown);\n\n    var _this3 = possibleConstructorReturn(this, (SelectDropdown.__proto__ || Object.getPrototypeOf(SelectDropdown)).call(this, props));\n\n    _this3.state = {\n      label: _this3.props.label,\n      options: null,\n      defaultValue: _this3.props.defaultValue\n    };\n    _this3.handleChange = _this3.handleChange.bind(_this3);\n    return _this3;\n  }\n\n  createClass(SelectDropdown, [{\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref2) {\n          return _this4.mount = _ref2;\n        }\n      }, React.createElement('label', null, this.props.label), React.createElement(Select, {\n        defaultValue: this.state.defaultValue,\n        options: this.props.options,\n        onChange: this.handleChange,\n        styles: {\n          container: function container() {\n            return {\n              width: _this4.props.width\n            };\n          }\n        }\n      }));\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(value) {\n      this.props.onSelectChange(value);\n    }\n  }]);\n  return SelectDropdown;\n}(React.Component);\n\nvar SearchSelectize = function (_React$Component3) {\n  inherits(SearchSelectize, _React$Component3);\n\n  function SearchSelectize(props) {\n    classCallCheck(this, SearchSelectize);\n\n    var _this5 = possibleConstructorReturn(this, (SearchSelectize.__proto__ || Object.getPrototypeOf(SearchSelectize)).call(this, props));\n\n    _this5.state = {\n      searchStr: '',\n      searched: false\n    };\n    _this5.handleChange = _this5.handleChange.bind(_this5);\n    _this5.handleClear = _this5.handleClear.bind(_this5);\n    return _this5;\n  }\n\n  createClass(SearchSelectize, [{\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      var searched = this.state.searched;\n      return React.createElement('div', {\n        ref: function ref(_ref3) {\n          return _this6.mount = _ref3;\n        }\n      }, React.createElement('label', null, this.props.label), React.createElement(Select, {\n        defaultValue: '',\n        defaultInputValue: '',\n        placeholder: 'Type to search...',\n        options: this.props.options,\n        onChange: this.handleChange,\n        styles: {\n          container: function container() {\n            return {\n              width: _this6.props.width\n            };\n          }\n        }\n      }), searched && React.createElement('button', {\n        onClick: this.handleClear,\n        className: 'btn btn-sm btn-outline-secondary',\n        style: {\n          marginTop: 5\n        }\n      }, 'Clear highlighted points'));\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(value) {\n      this.setState({\n        searched: true\n      });\n      this.props.onInputChange(value);\n    }\n  }, {\n    key: 'handleClear',\n    value: function handleClear() {\n      this.setState({\n        searched: false\n      });\n      this.props.onClearBtnClicked();\n    }\n  }]);\n  return SearchSelectize;\n}(React.Component);\n\nvar scatterWidgets =\n/*#__PURE__*/\nObject.freeze({\n  Legend: Legend,\n  SelectDropdown: SelectDropdown,\n  SearchSelectize: SearchSelectize\n});\n\nvar ScatterBoard = function (_React$Component) {\n  inherits(ScatterBoard, _React$Component);\n\n  function ScatterBoard(props) {\n    classCallCheck(this, ScatterBoard);\n\n    var _this = possibleConstructorReturn(this, (ScatterBoard.__proto__ || Object.getPrototypeOf(ScatterBoard)).call(this, props));\n\n    _this.state = {\n      data: null,\n      model: null,\n      colorScale: null,\n      shapeScale: null,\n      shapeLabels: null,\n      colorKey: _this.props.colorKey,\n      shapeKey: _this.props.shapeKey,\n      labelKeys: _this.props.labelKeys,\n      searchKeys: _this.props.searchKeys,\n      is3d: _this.props.is3d // events\n\n    };\n    _this.handleColorKeyChange = _this.handleColorKeyChange.bind(_this);\n    _this.handleShapeKeyChange = _this.handleShapeKeyChange.bind(_this);\n    _this.handleSearchInputChange = _this.handleSearchInputChange.bind(_this);\n    _this.handleClearBtnClick = _this.handleClearBtnClick.bind(_this);\n    fetch(_this.props.url).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong when fetching data ...');\n      }\n    }).then(function (data) {\n      return _this.setState({\n        data: data,\n        model: new ScatterData(data)\n      });\n    });\n    return _this;\n  }\n\n  createClass(ScatterBoard, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this; // variables to be passed to children's states\n\n\n      var _state = this.state,\n          colorKey = _state.colorKey,\n          shapeKey = _state.shapeKey,\n          labelKeys = _state.labelKeys,\n          searchKeys = _state.searchKeys,\n          is3d = _state.is3d;\n      var _state2 = this.state,\n          colorScale = _state2.colorScale,\n          shapeScale = _state2.shapeScale,\n          shapeLabels = _state2.shapeLabels;\n      var _props = this.props,\n          width = _props.width,\n          height = _props.height;\n      var colorOptions = null;\n      var shapeOptions = null;\n      var searchOptions = null;\n\n      if (this.state.model) {\n        colorOptions = this.state.model.getColorOptions();\n        shapeOptions = this.state.model.getShapeOptions();\n\n        if (searchKeys) {\n          searchOptions = this.state.model.getSearchOptions(searchKeys);\n        }\n      }\n\n      return React.createElement('div', {\n        style: {\n          position: 'relative',\n          padding: 0,\n          width: width,\n          height: height\n        }\n      }, React.createElement(Scatter3dView, {\n        data: this.state.data,\n        model: this.state.model,\n        width: width,\n        height: width,\n        DPR: window.devicePixelRatio,\n        colorKey: colorKey,\n        shapeKey: shapeKey,\n        labelKeys: labelKeys,\n        colorScale: colorScale,\n        shapeScale: shapeScale,\n        shapeLabels: shapeScale,\n        is3d: is3d,\n        mouseShiftClickCallback: this.props.mouseShiftClickCallback // create a ref for the parent to refer to the child\n        ,\n        ref: function ref(scatter3dView) {\n          _this2.scatter3dView = scatter3dView;\n        }\n      }), React.createElement(Legend, {\n        colorScale: colorScale,\n        colorKey: colorKey,\n        shapeScale: shapeScale,\n        shapeKey: shapeKey,\n        shapeLabels: shapeLabels\n      }), React.createElement('div', {\n        style: {\n          zIndex: 10,\n          top: 0,\n          right: 0,\n          width: 200,\n          position: 'absolute'\n        }\n      }, colorOptions && colorOptions.length > 1 && React.createElement(SelectDropdown, {\n        label: 'Color by:',\n        defaultValue: {\n          value: colorKey,\n          label: colorKey\n        },\n        options: colorOptions,\n        onSelectChange: this.handleColorKeyChange,\n        width: 180\n      }), shapeOptions && shapeOptions.length > 1 && React.createElement(SelectDropdown, {\n        label: 'Shape by:',\n        defaultValue: {\n          value: shapeKey,\n          label: shapeKey\n        },\n        options: shapeOptions,\n        onSelectChange: this.handleShapeKeyChange,\n        width: 180\n      }), searchKeys && searchKeys.length > 1 && React.createElement(SearchSelectize, {\n        label: 'Search:',\n        options: searchOptions,\n        onInputChange: this.handleSearchInputChange,\n        onClearBtnClicked: this.handleClearBtnClick,\n        width: 180\n      })));\n    }\n  }, {\n    key: 'handleColorKeyChange',\n    value: function handleColorKeyChange(value) {\n      // re-coloring the map when colorKey changed\n      var colorKey = value.value;\n\n      if (colorKey !== this.state.colorKey) {\n        var model = this.state.model;\n        var colorScale = model.calculateColorScale(colorKey);\n        this.setState({\n          colorKey: colorKey,\n          colorScale: colorScale\n        });\n      }\n    }\n  }, {\n    key: 'handleShapeKeyChange',\n    value: function handleShapeKeyChange(value) {\n      // re-shaping of the map when shapeKey changed\n      var shapeKey = value.value;\n\n      if (shapeKey !== this.state.shapeKey) {\n        var model = this.state.model;\n\n        var _model$calculateShape = model.calculateShapeScale(shapeKey),\n            shapeScale = _model$calculateShape.shapeScale,\n            shapeLabels = _model$calculateShape.shapeLabels;\n\n        this.setState({\n          shapeKey: shapeKey,\n          shapeScale: shapeScale,\n          shapeLabels: shapeLabels\n        });\n      }\n    }\n  }, {\n    key: 'handleSearchInputChange',\n    value: function handleSearchInputChange(valueObj) {\n      // update highlights for new search\n      var key = valueObj.key,\n          value = valueObj.value;\n      this.scatter3dView.highlightQuery(key, value);\n    }\n  }, {\n    key: 'handleClearBtnClick',\n    value: function handleClearBtnClick() {\n      this.scatter3dView.removeHighlightedPoints();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.data === null && prevState.data !== this.state.data) {\n        // data has been fetched for the first time\n        var _state3 = this.state,\n            colorKey = _state3.colorKey,\n            shapeKey = _state3.shapeKey;\n        var model = this.state.model;\n        var colorScale = model.calculateColorScale(colorKey);\n\n        var _model$calculateShape2 = model.calculateShapeScale(shapeKey),\n            shapeScale = _model$calculateShape2.shapeScale,\n            shapeLabels = _model$calculateShape2.shapeLabels;\n\n        this.setState({\n          colorScale: colorScale,\n          shapeScale: shapeScale,\n          shapeLabels: shapeLabels\n        });\n      }\n    }\n  }]);\n  return ScatterBoard;\n}(React.Component);\n\nvar index$1 = {\n  ScatterBoard: ScatterBoard\n};\nexport default index$1;\nexport { ScatterBoard, ScatterData, Scatter3dView, scatterWidgets as ScatterWidgets };","import React, { Component } from 'react'\nimport { Container, Row, Col, Navbar, Jumbotron, Button } from 'react-bootstrap'\nimport Scrollspy from 'react-scrollspy'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { ghcolors } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport ReactMarkdown from 'react-markdown'\n\nimport { ScatterBoard } from 'react-scatter-board'\n\n// get the Bootstrap column width\nconst rootElem = document.getElementById('root')\nconst colWidth = rootElem.clientWidth * 0.66\n\n// navbar with scrollspy\nconst navbar = (\n  <Navbar fixed='top' bg='primary' variant='dark'>\n    <Navbar.Brand href='#'>React Scatter Board</Navbar.Brand>\n    <Scrollspy\n      items={['section-1', 'section-2', 'section-3', 'section-4']}\n      offset={-56}\n      currentClassName='nav-item active'\n      className='navbar-nav'\n    >\n      <li className='nav-item active'>\n        <a className='nav-link' href='#section-1'>\n          Getting started\n        </a>\n      </li>\n      <li className='nav-item'>\n        <a className='nav-link' href='#section-2'>\n          Examples\n        </a>\n      </li>\n      <li className='nav-item'>\n        <a className='nav-link' href='#section-3'>\n          Props\n        </a>\n      </li>\n      <li className='nav-item'>\n        <a className='nav-link' href='#section-4'>\n          Developer guide\n        </a>\n      </li>\n    </Scrollspy>\n  </Navbar>\n)\n\nconst usageCode = `import React, { Component } from 'react';\nimport { ScatterBoard } from 'react-scatter-board;\nimport './App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <ScatterBoard\n        url={'https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3'}\n        shapeKey='strain'\n        colorKey='description'\n        labelKeys={['sample_id']}\n        searchKeys={['sample_id', 'description', 'source_name_ch1']}\n        is3d={true}\n      />\n    );\n  }\n}\n`\nconst inputDataDocSting = `\n## Input data format\nThe input data used for rendering the scatter plot should be passed through \na URL that returns a JSON array of objects. Each object should at least contains \n\\`x\\`, \\`y\\` and optionally \\`z\\` attributes to define their coordinates in the 2d/3d \nspace. It is recommended to normalize the ranges of \\`x\\`, \\`y\\`, and \\`z\\` to \n(-10, 10) for the ease of visualization. Objects in the JSON array can also have \narbitrary continuous and categorical attributes for coloring and shaping. It is also \nrecommended to have at least one attribute that uniquely identify each object in the \nJSON array. An example JSON array can be found \n[here](https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3).\n\n## Interactivity\n\n- Scatter plot\n  + **Zoom**: mouse wheel or touch with two-finger spread or squish.\n  + **Pan**: left mouse drag or arrow keys on keyboard.\n  + **Rotation (3d only)**: left mouse drag or touch with one-finger move.\n  + **Show tooltip**: mouse hover points in scatter plot.\n  + **Activate custom point event**: Shift + mouse left click. See [mouseShiftClickCallback](#section-3) for details. \n- Color/Shape dropdowns: click on the dropdown select to update colors/shapes in the scatter plot.\n- Search box: type anything to search and highlight for point(s) in the scatter plot.\n`\n\n// 2d example\nconst dataUrl2 = 'https://amp.pharm.mssm.edu/l1000fwd/graph/A549_kNN_5'\nconst board2d = (\n  <ScatterBoard\n    url={dataUrl2}\n    shapeKey='Time'\n    colorKey='MOA'\n    labelKeys={['sig_id', 'MOA']}\n    searchKeys={['MOA', 'Phase']}\n    width={colWidth}\n    height={colWidth}\n    mouseShiftClickCallback={datum => alert(JSON.stringify(datum))}\n  />\n)\nconst codeExample1 = `\n<ScatterBoard\n  url='https://amp.pharm.mssm.edu/l1000fwd/graph/A549_kNN_5'\n  shapeKey='Time'\n  colorKey='MOA'\n  labelKeys={['sig_id', 'MOA']}\n  searchKeys={['MOA', 'Phase']}\n  width={colWidth}\n  height={colWidth}\n  mouseShiftClickCallback={datum => alert(JSON.stringify(datum))}\n/>\n`\n\n// 3d example\nconst dataUrl3 = 'https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3'\nconst board3d = (\n  <ScatterBoard\n    url={dataUrl3}\n    shapeKey='strain'\n    colorKey='description'\n    labelKeys={['sample_id', 'description']}\n    searchKeys={['sample_id', 'description', 'source_name_ch1']}\n    is3d={true}\n    width={colWidth}\n    height={colWidth}\n  />\n)\nconst codeExample2 = `\n<ScatterBoard\n  url='https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3'\n  shapeKey='strain'\n  colorKey='description'\n  labelKeys={['sample_id', 'description']}\n  searchKeys={['sample_id', 'description', 'source_name_ch1']}\n  is3d={true}\n  width={colWidth}\n  height={colWidth}\n/>\n`\n\n// 3d example (disable search)\nconst board3dNoSearch = (\n  <ScatterBoard\n    url='https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3'\n    shapeKey='strain'\n    colorKey='molecule_ch1'\n    labelKeys={['sample_id', 'description']}\n    is3d={true}\n    width={colWidth}\n    height={colWidth}\n  />\n)\nconst codeExample3 = `\n<ScatterBoard\n  url='https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3'\n  shapeKey='strain'\n  colorKey='molecule_ch1'\n  labelKeys={['sample_id', 'description']}\n  is3d={true}\n  width={colWidth}\n  height={colWidth}\n/>\n`\n\nconst propsDocString = `\n# Props\n- **url** (_string_): a URL to the json formatted data. Be sure to enable Cross-Origin Resource Sharing (CORS) if the URL is from another site. \n- **shapeKey** (_string_): the key to shape the dots by default.\n- **colorKey** (_string_): the key to color the dots by default.\n- **labelKeys** (_Array_ of strings): the ordered list of keys of attributes to display for the dots when mouse hovers.\n- **searchKeys** (_Array_ of strings): the list of keys of attributes to enable the search functionality to query against. If not provided, the SearchSelectize component will not be rendered.\n- **width** (_number_): the width of the component in pixels. Default: 1400.\n- **height** (_number_): the height of the component in pixels. Default: 800.\n- **is3d** (_boolean_): should the scatter plot in 3-D (true) or 2-D (false). \n- **mouseShiftClickCallback** (_function_): a callback function handling when user shift+click a data point. The input of the function is the datum object being clicked.  \n`\n\nconst developerGuide = (\n  <div>\n    <h1>Development</h1>\n    <h2>Local Development</h2>\n    <p>Local development is broken into two parts (ideally using two tabs).</p>\n    <p>\n      First, run rollup to watch your <code>src/</code> module and automatically\n      recompile it into <code>dist/</code> whenever you make changes.\n    </p>\n    <SyntaxHighlighter language='bash' style={ghcolors}>\n      {`npm start # runs rollup with watch flag`}\n    </SyntaxHighlighter>\n    <p>\n      The second part will be running the <code>example/</code> create-react-app\n      that's linked to the local version of your module.\n    </p>\n    <SyntaxHighlighter language='bash' style={ghcolors}>\n      {`# (in another tab)\ncd example\nnpm start # runs create-react-app dev server`}\n    </SyntaxHighlighter>\n    <p>\n      Now, anytime you make a change to your library in src/ or to the example\n      app's <code>example/src</code>, create-react-app will live-reload your\n      local dev server so you can iterate on your component in real-time.\n    </p>\n    <h2>Deployment to GitHub Pages</h2>\n    <SyntaxHighlighter language='bash' style={ghcolors}>\n      {`npm run deploy`}\n    </SyntaxHighlighter>\n    <p>\n      This creates a production build of the example{' '}\n      <code>create-react-app</code> that showcases your library and then runs{' '}\n      <code>gh-pages</code> to deploy the resulting bundle.\n    </p>\n    <h2>Publishing to npm</h2>\n    <SyntaxHighlighter language='bash' style={ghcolors}>\n      {`npm publish`}\n    </SyntaxHighlighter>\n    <p>\n      Make sure that any npm modules you want as peer dependencies are properly\n      marked as <code>peerDependencies</code> in <code>package.json</code>. The\n      rollup config will automatically recognize them as peers and not try to\n      bundle them in your module.\n    </p>\n  </div>\n)\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        {navbar}\n        <Jumbotron fluid>\n          <Container>\n            <h1>React Scatter Board</h1>\n            <p>\n              A React implementation of THREE.js 2d/3d scatter plot. This\n              library was created using the create-react-library CLI.\n            </p>\n            <Button\n              variant='outline-dark'\n              href='https://github.com/MaayanLab/react-scatter-board'\n            >\n              GitHub repo\n            </Button>\n          </Container>\n        </Jumbotron>\n\n        <Container fluid={true}>\n          <Row id='section-1' className='justify-content-md-center'>\n            <Col md={10}>\n              <h1>Getting started</h1>\n              <h2>Install</h2>\n              <SyntaxHighlighter language='bash' style={ghcolors}>\n                {'npm install --save maayanlab/react-scatter-board'}\n              </SyntaxHighlighter>\n              <h2>Usage</h2>\n              <SyntaxHighlighter language='javascript' style={ghcolors}>\n                {usageCode}\n              </SyntaxHighlighter>\n              <ReactMarkdown source={inputDataDocSting} />\n            </Col>\n          </Row>\n          <div id='section-2'>\n            <Row className='justify-content-md-center'>\n              <Col md={12}>\n                <h1>Examples</h1>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={4}>\n                <h2>2d Example:</h2>\n                <SyntaxHighlighter\n                  language='jsx'\n                  style={ghcolors}\n                  wrapLines={true}\n                >\n                  {codeExample1}\n                </SyntaxHighlighter>\n              </Col>\n              <Col xs={8}>{board2d}</Col>\n            </Row>\n            <Row>\n              <Col xs={4}>\n                <h2>3d Example:</h2>\n                <SyntaxHighlighter\n                  language='jsx'\n                  style={ghcolors}\n                  wrapLines={true}\n                >\n                  {codeExample2}\n                </SyntaxHighlighter>\n              </Col>\n              <Col xs={8}>{board3d}</Col>\n            </Row>\n            <Row>\n              <Col xs={4}>\n                <h2>3d Example: disabling search</h2>\n                <SyntaxHighlighter\n                  language='jsx'\n                  style={ghcolors}\n                  wrapLines={true}\n                >\n                  {codeExample3}\n                </SyntaxHighlighter>\n              </Col>\n              <Col xs={8}>{board3dNoSearch}</Col>\n            </Row>\n          </div>\n          <Row id='section-3' className='justify-content-md-center'>\n            <Col md={10}>\n              <ReactMarkdown source={propsDocString} />\n            </Col>\n          </Row>\n          <Row id='section-4' className='justify-content-md-center'>\n            <Col md={10}>{developerGuide}</Col>\n          </Row>\n        </Container>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}