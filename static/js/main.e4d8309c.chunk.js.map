{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","styleInject","_typeof","Symbol","iterator","obj","constructor","prototype","index_es_classCallCheck","instance","Constructor","TypeError","index_es_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","index_es_inherits","subClass","superClass","create","value","setPrototypeOf","__proto__","index_es_possibleConstructorReturn","self","call","ReferenceError","toConsumableArray","arr","Array","isArray","arr2","from","imageData","circle","cross","diamond","square","triangle-down","triangle-up","Texture$1","Texture$$1","symbolType","this","image","Image","src","texture","three_module","needsUpdate","RARE","getDataType","Number","isInteger","orderArray","indices","orderedArr","encodeRareCategories","k","counts","underscore_default","a","countBy","sortBy","pairs","tuple","frequentCategories","map","slice","indexOf","binValues","nbins","extent","d3_default","min","parseFloat","max","interval","domain","range","labels","toFixed","label","push","binValues2","ScatterDataSubset","data","n","_getIndicesAndPositio","getIndicesAndPositions","positions","Uint32Array","Float32Array","x","y","z","metaKey","record","index_es_PointsGeometry","PointsGeometry","args","model","geometry","createGeometry","setIndex","addAttribute","userData","index","getAttr","computeBoundingSphere","index_es_ScatterData","ScatterData","metas","parse","_getIndicesAndPositio2","_this","xyz","_loop","values","o","nUnique","concat","Set","name","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","next","done","err","return","labelKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","labelKey","dataSubsets","groupBy","mapObject","records","list","binnedValues","pluck","Math","floor","_binBy","filter","edge","_binBy2","rec","_this2","colorOptions","meta","shapeOptions","findWhere","dtype","uniqueCats","nUniqueCats","size","idx","greyIdx","elem","_idx","greyIdx2","_elem","colorExtent","min_score","max_score","colorScale","scale","pow","ordinal","category10","category20","symbols","svg","symbolTypes","t","symbol","scatterDataSubsets","shapeLabels","shapeScale","binBy","pValueDomain","binBy2","threshold","index_es_Scatter3dView","_React$Component","Scatter3dView","_this3","getPrototypeOf","is3d","state","isLoading","isLoaded","url","WIDTH","width","HEIGHT","height","DPR","colorKey","shapeKey","pointSize","showStats","handleMouseMove","bind","_this4","setState","fetch","then","response","ok","json","Error","makeMaterial","setUpStage","shapeBy","renderScatter","prevProps","prevState","snapshot","_this5","node_modules_react_default","_ref","mount","onMouseMove","e","_this6","_state","aspectRatio","scene","renderer","setClearColor","setPixelRatio","setSize","left","right","bottom","top","camera","position","domElement","id","controls","OrbitControls","enableZoom","screenSpacePanning","enableRotate","mouseButtons","LEFT","RIGHT","MIDDLE","DOLLY","addEventListener","raycaster","raycasterThreshold","params","Points","mouse","_state2","nativeEvent","offsetX","offsetY","materials","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","textureResult","load","material","vertexColors","sizeAttenuation","alphaTest","transparent","opacity","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","children","child","remove","_model$calculateShape","calculateShapeScale","geometries","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","mergedGeometry","BufferGeometryUtils","mergeBufferGeometries","g","reduce","arr1","getLabels","groupSizes","cumsums","unshift","addGroup","points","clearScene","add","setColors","setFromCamera","intersects","intersectObjects","resetColors","textLabel","getElementById","intersect","object","attributes","color","array","pointPosition","textCanvas","makeTextCanvas","fontsize","fontface","textColor","r","b","render","message","parameters","hasOwnProperty","lineHeight","canvas","context","getContext","_state3","font","textBaseline","textAlign","measureText","fillStyle","point","pv","copy","project","coords","lines","split","fillText","pointerEvents","colors","toArray","_i","_color","Component","index_es_Legend","Legend","setUpDOMs","displayColorLegend","displayShapeLegend","el","select","append","attr","zIndex","overflow","legendShape","no_extend_default","orient","title","legendColor","shapeWidth","cells","labelFormat","format","index_es_SelectDropdown","_React$Component2","SelectDropdown","options","defaultValue","handleChange","_ref2","react_select_browser_esm","onChange","styles","container","onSelectChange","index_es_ScatterBoard","_React$Component3","SearchSelectize","searchStr","_ref3","defaultInputValue","onInputChange","ScatterBoard","handleColorKeyChange","handleShapeKeyChange","_props","getColorOptions","getShapeOptions","padding","window","devicePixelRatio","scatter3dView","calculateColorScale","_model$calculateShape2","colWidth","clientWidth","board2d","react_default","board3d","App","Container","fluid","Row","Col","xs","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.e4d8309c.chunk.js","sourcesContent":["import { BufferGeometry, BufferAttribute, Scene, WebGLRenderer, OrthographicCamera, PerspectiveCamera, MOUSE, Raycaster, Vector2, PointsMaterial, VertexColors, Points, Vector3, Color, Texture } from 'three';\nimport React from 'react';\nimport d3 from 'd3';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport _ from 'underscore';\nimport legend from 'd3-svg-legend/no-extend';\nimport Select from 'react-select';\nimport 'prop-types';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"body {\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\\n#index_root__4PyOE {\\n}\\n\";\nstyleInject(css);\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}; // generated according to https://stackoverflow.com/questions/6150289/how-to-convert-image-into-base64-string-using-javascript\n\n\nvar imageData = {\n  circle: \",iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACtElEQVRYR+2Wz2sTQRTH5+2mNu2QbJY1Ymuym9nkInjwR/HgQRQVEf8Db9KDB0+K+CfovT0IIuKf4EVBUfSioGD1KJjdndmEEJrY1mQDadjdkZFWSkmT3aQShO5133vfz7z9znsLaMIPTFgfHQD8nx2wLOs6ABQ45/qWhxhCiBWLxRdxPRW5A/V6HXe73UdhGN7AGNclSTqWSCT+6Pm+j8IwrHqedxQAnhFCbgNALwpMJADbts8DwHNVVdV0Oo0A+qdxzlGr1ULr6+utIAiulUqlj8MghgLUarUF3/ff5vP59LBiO99Xq9W2LMsX5ufnVwblDQQol8snpqamPui6Hkt8W5Ax1uacnyWEfN8LYiAApbSZy+U0WZbjHP5vbBAEyHXdhmmaR2IDUErvzs7OPshms9MjqW8lNRqNzU6nc58QstSvzp4dYIx91TTtJMZ4HH3U6XTQ2traF13XF2IBWJYVEkJgL8dHpRI3g1IamqbZ9zv27YBt21eSyeTrubm5qDoD42q1Gur1ehcJIe93B/YFoJQ+yWQyi4qi7AvAxsaGmA+PDcO4FRlAUZTFTCYzGQDLsi7NzMy8mdgnEMfeLxOGYYgYY/FMKAAYYyuapp2a2DV0HOcOxvjhuINodXW11+127xmGsRxrDohgx3Ga+Xx+5FEs1nSlUmmappmNPYpFAqX0OELok2EYqVGug+u6nu/7p4vF4o+RALa8cAYh9E7X9VgQruv+Eus4l8t9G3kdbyeWy+Vzsiy/VFVVSaVSSJKkvjWF49vttpj9bYTQZdM0Pw/r3NAfku0CnPNDtm0vAcBNjHETAIQ3psWu8H1/k3P+0/O8w5IkPS0UCuKXLBwmLt5HBthZzHGcq0EQFADA4JwLIVeWZUYIeRVFdGfMSABxRcb2wH4KRlpG/1LwAGB3B34DBWQWMG24djEAAAAASUVORK5CYII=\",\n  cross: \",iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAA50lEQVRYR+2XPQ6DMAyF8QZbfIYchN4spRer6D1yBcyWbKmylZI4WB0oklmdn8cnvfcAupMfOPn+7noCvPeOo2atnSRURQTy5cMwuL7vi/tijCmE8LDW3o+KEAtARIeIxX1ElIhIBSiBixNo+HxExBvngmVZXgDwrNnwOyc2dmr5PB+KiKzFiag6L+XETgDn86PhUltXygkVoAT+jwBXt7/aMITQxRinz7re1ar3vtrlADAaY3IYVet4Xdc5pTQzQbQ5X78HlIASEBPgcqLk81aDigTkw7icyHPJP0FeLxbQeiPpXAW8AUg5MTAvQNb8AAAAAElFTkSuQmCC\",\n  diamond: \",iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAACaElEQVRYR9WXy4vTUBTG05DW2E7sI6XPlOTeUkTcqeB2QHApIrgTXIr+AbrVlW5cKbidlStFXKsrl+IsB4T23tiGtolp2pLbTh9JkQwpjNppmkyHYFaB3POdX777OidCBXwQQhdpmv5GUdRisVhchxD+CCIVCRLkxGCMv+fz+SvOu6qq+wCAq0G0AgHU6/Xb8Xh8r1gsJp2knU5nOJ1O7wMAPvqFCASAMTYEQUgzDHOUz7IsqtVq9SGEmTMHwBg/5TjuCc/z7PFkvV5vYprmCwDAMz8QvhzQNG2HEKIDAM6tSoIxnrEsmy6VSuNNIXwBYIzf8zx/h+O4lfqmaVKGYbyTJOnu1gEajca1aDT6pVKpXFgnriiKadv2riRJ+5tAbOwAxvigUChcYtk/pv6fHJPJhOp2uwcAgMtbA0AI3UskEm9yudzOJqKqqpLRaPSgWq2+9Rq/kQMIoUNRFFmapr30jr7btk01m80xhDDhFeAJgBB6mUqlHqbT6fNeYse/9/v9w8Fg8BpC+Hhd3FoAjHEhEok0RFGM+0m+HCvL8tiyLKlWq/06KX4tgCzLn7PZ7I1EwtPJlfqEEErX9U8AgJu+ATDGuwzDfBAEIRXk75cxiqIM5vP5LQjh11U6JzqAEGqWy+VKLBY7TX5qNptR7Xb7JwBA+r8AQp8Cx65QF6EDEPo2dCCcgyiZTD7KZDLrL4G/VphhGJPhcPjqVAfRUjPUo9h1wddlpGkaIYRs7zJy10N417EDEHpB4roQXknmAIRelLourCzLdV2fEkKen2lZvtyWoTYmDkTorZk7FeE1p+7htJX2/DfV7WYwLPkGlAAAAABJRU5ErkJggg==\",\n  square: \",iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAp0lEQVRYR+2WMQ4CIRBFWQoyFQ03YG7naqPHsNEY9XLADSjooFrD1mJixmRj8qlh/ssbij+pjc+0cb4CAAx8NBBCOGitjfCjVu/9fTRjCNDDiehKRKI1tdaWWuuemR/vIIbDU0ona+3ZOScCyDkvpZQjM18AAAMwAAMwAAMw8HcGZmPM7UeFZGbm51cG+uUY404pJa1kbRTeM0RtR9gV1+cAgIHNDbwAdNviIRMkcw0AAAAASUVORK5CYII=\",\n  \"triangle-down\": \",iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC2klEQVRYR+2WPWzTQBiGnR/iFrs4pFadpolyn09VJZAYOjDQCYmFiYVKIDHQgRWxMCAhIaSuHWCEAXWknZAQG1IHJAbEAggGcpc4bVK3Sdu0SUwSXBu5clHTpk7sJC0D3uLcfe9z730/9jGn/PhOWZ/5dwAURblgGEbiJBzx+XxZhNAPS+uvA5RSJRQK8f0GME3Tp+v6NgBAEwAh5DbHcS8lSeL6CbG2tlbVNG1GluXFJgDrRyaT+SZJ0sWBgYG+MNRqNUZV1a8AcGlfoCkJM5nMZCAQWIrH40P9IFheXq7ouj4ly/KXlgC2C4uRSOTm0FBvGXZ2dpjNzc3XAHDr4OGOlGE+nz9bq9W2ACDUSxcopbphGPz4+HjdEcD6M51OP+F5/pEoimwvIIrFYr1cLs/Ksjx7ON6xjSidTm/E4/FIMBjsikHXdWZlZWUDAMRWgZwAbrAsOz86Oip0Q6Cq6ramaXcwxm9dAdhX8VmSpMnBwUFPDJqmMcVi8VMymbx8XADHWUApnfD7/VYATyWRzWatspvEGP/0BGBtUhRlXhCEaUEQXNlQKpV+lUqlBQC462RfR9OQEGLKsuzqGiilDMa4bfy2C+zm9JDjuMeiKJ7rhKJQKJQ1TXuKEJprt74jADshV2OxWDQUcu5PjUaDyefzqwAQayd+ZBg5bSCEXGNZdmFsbOy807pcLrdVr9enMcbvewpgJ+SH4eHhKY5rPbGr1SpTKBSWAOBqJ+KuHLAWp1KpRDAY/J5MJlt+uCiKUg0EAhOJRCLXFwA7F56Fw+F74XC4qSztsnsBAA86FXftwH5gQkgDIXTG7/fvvTIMw/qY+Y0xdj1BO66Cg6cihMzwPP98ZGRk7yrW19crlUrlPsb4lZvTe3bA7g0kGo3udSdVVSlCCLsV7woglUpdYVn2nRVkd3f3OkLo44kC2GX5xjRNKx+mvYh35YBXwcP7PCVhr8T/O2A58AfGZw8wtSahoQAAAABJRU5ErkJggg==\",\n  \"triangle-up\": \",iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAC3UlEQVRYR+2VP2gTURzHLyG5tOnFXD0uJsTj3u9dB4s4iIIOIk5uDnUQQdChuApOBScFh4KDg4uDOgkKKoKO4iAI4lIciiD03rtoSnOJTbzcJTmS651EraTm312a2qVvvd/v+/2873vvdyFml1dol/2ZPYBtJUApfdk+QgCYG/UoRwZQVfVULBZ77Xke02w2zymK8n4UiJEBKKU0k8mgtmmhUKAIIfzfAAgh8xzH3RVFMdE2LRaLZq1Wu44xfhgUYqQEVFVtAUAkFPrd7rouo2maoyhKdMcBCCH3eJ6fn56enuw0q1QqjWq1+gAhdC0IRKAECCFyOBxelmWZ62WSy+WsjY2Nw4qifPULEQhA07QPoiiejMfjPfVrtRpTKpXeAcCZsQMQQs6yLPskm83uHyS+urpabjabFzHGb/xA+E6AUlrIZrMHotHB96zVajH5fF7HGKfHBkApXZiamrohiuI+P6KlUqlar9dvI4TuDKsfmoDneWFCSAtjHB4m1vmdEOIpijK0ZyiApmmPeZ6fSyaTvW9eHyrDMOqGYTyXZfnKIPCBAJqmzTIM81GW5V8TL+jK5XKG67onMMZf+vUOA1hKpVJHJye3zBzfHI1Gg9F1fQkAjgUGWFlZmYvH448ymQzv27FH4drammHb9mWM8ateOn0TIIRUJEniI5HIdvwZx3Haz7IMAIJvAErpzUQisSAIwsS23P80r6+v26ZpLgLArX/1uhIoFoucZVnfASA2DvNNjfZTZlk2KUlSo1O3C4BS+kIQhPOJxEgXvy+zaZpMuVx+hhC60BdAVdXj0Wj0rSRJviZe0ITy+bzpOM5pAPi02bslAUrp53Q6PTsxMZaj7+Kzbbv9LJcRQke6AFRVvcRx3P1UKtXzXx90t/3qdV23LMu6OjMz87Rd8zcBQojGsuyORN8J43leyHGcHwAAWwAopYdc1z04rp0OnP+h0LfN8Tz0Z7TTQHsAPwHv3BIw9zTkUQAAAABJRU5ErkJggg==\"\n};\n\nvar Texture$1 = function () {\n  function Texture$$1(symbolType) {\n    classCallCheck(this, Texture$$1);\n    this.symbolType = symbolType;\n  }\n\n  createClass(Texture$$1, [{\n    key: \"load\",\n    value: function load() {\n      // Load a texture synchronously\n      var image = new Image();\n      image.src = \"data:image/png;base64\" + imageData[this.symbolType];\n      var texture = new Texture(image);\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }]);\n  return Texture$$1;\n}();\n/**\n * convenience for converting JSON color to rgba that canvas wants\n * Be nice to handle different forms (e.g. no alpha, CSS style, etc.)\n */\n\n\nfunction getCanvasColor(color) {\n  return 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n}\n\nvar RARE = 'other';\n\nfunction getDataType(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  if (type === 'number') {\n    type = 'int';\n\n    if (!Number.isInteger(value)) {\n      type = 'float';\n    }\n  }\n\n  return type;\n}\n\nfunction orderArray(arr, indices) {\n  // Reorder arr based on indices\n  var orderedArr = new Array(arr.length);\n\n  for (var i = 0; i < arr.length; i++) {\n    orderedArr[i] = arr[indices[i]];\n  }\n\n  return orderedArr;\n}\n\nfunction encodeRareCategories(arr, k) {\n  // Count occurences of each unique categories in arr,\n  // then keep top k and encode rare categories as 'rares'\n  var counts = _.countBy(arr); // sort values\n\n\n  counts = _.sortBy(_.pairs(counts), function (tuple) {\n    return -tuple[1];\n  }); // get top k frequent categories\n\n  var frequentCategories = _.map(counts.slice(0, k), function (tuple) {\n    return tuple[0];\n  });\n\n  for (var i = 0; i < arr.length; i++) {\n    if (frequentCategories.indexOf(arr[i]) === -1) {\n      arr[i] = RARE;\n    }\n  }\n\n  return arr;\n}\n\nfunction binValues(arr, nbins) {\n  // Binning continues array of values in to nbins\n  var extent = d3.extent(arr);\n  var min = parseFloat(extent[0]);\n  var max = parseFloat(extent[1]);\n  var interval = (max - min) / nbins; // bin width\n\n  var domain = _.range(1, nbins).map(function (i) {\n    return i * interval + min;\n  }); // bin edges\n\n\n  var labels = [min.toFixed(2) + ' to ' + domain[0].toFixed(2)];\n\n  for (var i = 0; i < nbins - 1; i++) {\n    if (i === nbins - 2) {\n      // the last bin\n      var label = domain[i].toFixed(2) + ' to ' + max.toFixed(2);\n    } else {\n      var label = domain[i].toFixed(2) + ' to ' + domain[i + 1].toFixed(2);\n    }\n\n    labels.push(label);\n  }\n\n  return {\n    labels: labels,\n    domain: domain,\n    min: min,\n    max: max,\n    interval: interval\n  };\n}\n\nfunction binValues2(arr, domain) {\n  // Binning continues array of values by a given binEdges (domain)\n  // domain: [0.001, 0.01, 0.05, 0.1, 1]\n  // domain should include the largest (rightest) value\n  var extent = d3.extent(arr);\n  var min = parseFloat(extent[0]);\n  var max = parseFloat(extent[1]);\n  var labels = ['0 to ' + domain[0]];\n  var nbins = domain.length;\n\n  for (var i = 0; i < nbins - 1; i++) {\n    var label = domain[i] + ' to ' + domain[i + 1];\n    labels.push(label);\n  }\n\n  return {\n    labels: labels,\n    domain: domain.slice(0, -1),\n    min: min,\n    max: max\n  };\n}\n\nfunction _binBy(list, key, nbins) {\n  // similar to _.groupBy but applying to continues values using `binValues`\n  // list: an array of objects\n  // key: name of the continues variable\n  // nbins: number of bins\n  var values = _.pluck(list, key);\n\n  var binnedValues = binValues(values, nbins);\n  var labels = binnedValues.labels;\n  var min = binnedValues.min;\n  var interval = binnedValues.interval;\n\n  var grouped = _.groupBy(list, function (obj) {\n    var i = Math.floor((obj[key] - min) / interval);\n\n    if (i === nbins) {\n      // the max value\n      i = nbins - 1;\n    }\n\n    return labels[i];\n  });\n\n  return grouped;\n}\n\nfunction _binBy2(list, key, domain) {\n  // wrapper for `binValuesBy`\n  var values = _.pluck(list, key);\n\n  var binnedValues = binValues2(values, domain);\n  var labels = binnedValues.labels;\n\n  var grouped = _.groupBy(list, function (obj) {\n    var i = _.filter(domain, function (edge) {\n      return edge < obj[key];\n    }).length;\n\n    return labels[i];\n  });\n\n  return grouped;\n}\n\nvar ScatterDataSubset = function () {\n  // \"model\" for PointsGeometry\n  function ScatterDataSubset(data) {\n    classCallCheck(this, ScatterDataSubset);\n    this.data = data;\n    this.n = data.length;\n\n    var _getIndicesAndPositio = this.getIndicesAndPositions(data),\n        indices = _getIndicesAndPositio.indices,\n        positions = _getIndicesAndPositio.positions;\n\n    this.indices = indices;\n    this.positions = positions;\n  }\n\n  createClass(ScatterDataSubset, [{\n    key: 'getIndicesAndPositions',\n    value: function getIndicesAndPositions(data) {\n      var n = this.n;\n      var indices = new Uint32Array(n);\n      var positions = new Float32Array(n * 3);\n\n      for (var i = 0; i < n; i++) {\n        indices[i] = i;\n        positions[i * 3] = data[i].x;\n        positions[i * 3 + 1] = data[i].y;\n        positions[i * 3 + 2] = data[i].z || 0;\n      }\n\n      return {\n        indices: indices,\n        positions: positions\n      };\n    }\n  }, {\n    key: 'getAttr',\n    value: function getAttr(metaKey) {\n      return this.data.map(function (record) {\n        return record[metaKey];\n      });\n    }\n  }]);\n  return ScatterDataSubset;\n}();\n\nvar PointsGeometry = function () {\n  function PointsGeometry(args) {\n    classCallCheck(this, PointsGeometry);\n    this.model = args.model;\n    this.geometry = null;\n    this.createGeometry();\n  }\n\n  createClass(PointsGeometry, [{\n    key: 'createGeometry',\n    value: function createGeometry() {\n      var geometry = new BufferGeometry();\n      var model = this.model;\n      geometry.setIndex(new BufferAttribute(model.indices, 1));\n      geometry.addAttribute('position', new BufferAttribute(model.positions, 3)); // this is used for tracking the original orders of the data objects in the entire ScatterData\n\n      geometry.userData = {\n        index: model.getAttr('index')\n      };\n      geometry.computeBoundingSphere();\n      this.geometry = geometry;\n    }\n  }]);\n  return PointsGeometry;\n}();\n\nvar ScatterData = function () {\n  function ScatterData(data) {\n    classCallCheck(this, ScatterData);\n    this.data = data;\n    this.n = data.length;\n    this.metas = [];\n    this.parse();\n\n    var _getIndicesAndPositio2 = this.getIndicesAndPositions(),\n        indices = _getIndicesAndPositio2.indices,\n        positions = _getIndicesAndPositio2.positions;\n\n    this.indices = indices;\n    this.positions = positions;\n  }\n\n  createClass(ScatterData, [{\n    key: 'parse',\n    value: function parse() {\n      var _this = this; // extract the meta data `metas` in the array of object\n\n\n      var data = this.data;\n      var xyz = ['x', 'y', 'z'];\n\n      var _loop = function _loop(key) {\n        if (xyz.indexOf(key) === -1) {\n          var values = data.map(function (o) {\n            return o[key];\n          });\n          var nUnique = [].concat(toConsumableArray(new Set(values))).length;\n          var type = getDataType(data[0][key]);\n\n          _this.metas.push({\n            name: key,\n            nUnique: nUnique,\n            type: type\n          });\n        }\n      };\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(data[0])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n\n          _loop(key);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'getIndicesAndPositions',\n    value: function getIndicesAndPositions() {\n      var n = this.n;\n      var indices = new Uint32Array(n);\n      var positions = new Float32Array(n * 3);\n\n      for (var i = 0; i < n; i++) {\n        indices[i] = i;\n        positions[i * 3] = this.data[i].x;\n        positions[i * 3 + 1] = this.data[i].y;\n        positions[i * 3 + 2] = this.data[i].z || 0; // add index to the object\n\n        this.data[i].index = i;\n      }\n\n      return {\n        indices: indices,\n        positions: positions\n      };\n    }\n  }, {\n    key: 'getLabels',\n    value: function getLabels(labelKeys) {\n      // return an array of label texts given a list of labelKeys\n      var n = this.n;\n      var labels = new Array(n);\n      var i = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var record = _step2.value;\n          var label = '';\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = labelKeys[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var labelKey = _step3.value;\n\n              if (labelKey === 'Time') {\n                label += labelKey + ': ' + record[labelKey] + ' hours\\n';\n              } else if (labelKey === 'Dose') {\n                label += labelKey + ': ' + record[labelKey] + ' μM\\n';\n              } else {\n                label += labelKey + ': ' + record[labelKey] + ' \\n';\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          labels[i] = label;\n          i++;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return labels;\n    }\n  }, {\n    key: 'groupBy',\n    value: function groupBy(metaKey) {\n      // group by a metaKey and return an object of _ScatterDataSubset objects keyed by metaKey\n      var dataSubsets = _.groupBy(this.data, metaKey);\n\n      var scatterDataSubsets = _.mapObject(dataSubsets, function (records, key) {\n        return new ScatterDataSubset(records);\n      });\n\n      return scatterDataSubsets;\n    }\n  }, {\n    key: 'binBy',\n    value: function binBy(metaKey, nbins) {\n      var dataSubsets = _binBy(this.data, metaKey, nbins);\n\n      var scatterDataSubsets = _.mapObject(dataSubsets, function (records, key) {\n        return new ScatterDataSubset(records);\n      });\n\n      return scatterDataSubsets;\n    }\n  }, {\n    key: 'binBy2',\n    value: function binBy2(metaKey, domain) {\n      var dataSubsets = _binBy2(this.data, metaKey, domain);\n\n      var scatterDataSubsets = _.mapObject(dataSubsets, function (records, key) {\n        return new ScatterDataSubset(records);\n      });\n\n      return scatterDataSubsets;\n    }\n  }, {\n    key: 'getAttr',\n    value: function getAttr(metaKey) {\n      return this.data.map(function (record) {\n        return record[metaKey];\n      });\n    }\n  }, {\n    key: 'setAttr',\n    value: function setAttr(key, values) {\n      for (var i = 0; i < this.n; i++) {\n        var rec = this.data[i];\n        rec[key] = values[i];\n        this.data[i] = rec;\n      } // add meta data of this new attr\n\n\n      this.metas.push({\n        name: key,\n        nUnique: [].concat(toConsumableArray(new Set(values))).length,\n        type: getDataType(values[0])\n      });\n    }\n  }, {\n    key: 'getColorOptions',\n    value: function getColorOptions() {\n      var _this2 = this;\n\n      var colorOptions = this.metas.filter(function (meta) {\n        return meta.nUnique < _this2.n && meta.nUnique > 1;\n      });\n      colorOptions = colorOptions.map(function (meta) {\n        return {\n          value: meta.name,\n          label: meta.name\n        };\n      });\n      return colorOptions;\n    }\n  }, {\n    key: 'getShapeOptions',\n    value: function getShapeOptions() {\n      var shapeOptions = this.metas.filter(function (meta) {\n        return meta.type !== 'float' && meta.nUnique < 7 && meta.nUnique > 1;\n      });\n      shapeOptions = shapeOptions.map(function (meta) {\n        return {\n          value: meta.name,\n          label: meta.name\n        };\n      });\n      return shapeOptions;\n    }\n  }, {\n    key: 'calculateColorScale',\n    value: function calculateColorScale(metaKey) {\n      // Color points by a certain metaKey\n      // update colorKey\n      var metas = this.getAttr(metaKey);\n\n      var meta = _.findWhere(this.metas, {\n        name: metaKey\n      });\n\n      var dtype = meta.type;\n\n      if (dtype !== 'float' && dtype !== 'int' && meta.nUnique > 20) {\n        metas = encodeRareCategories(metas, 19);\n      }\n\n      var uniqueCats = new Set(metas);\n      var nUniqueCats = uniqueCats.size;\n      uniqueCats = Array.from(uniqueCats); // Make unknown to be gray\n\n      if (uniqueCats.indexOf('unknown') !== -1) {\n        if (uniqueCats.length > 7) {\n          var idx = uniqueCats.indexOf('unknown');\n          var greyIdx = 7;\n\n          if (uniqueCats.length === 20) {\n            greyIdx = 15;\n          }\n\n          var elem = uniqueCats[greyIdx];\n          uniqueCats[greyIdx] = 'unknown';\n          uniqueCats[idx] = elem;\n        }\n      } // Make RARE to be grey\n\n\n      if (uniqueCats.indexOf(RARE) !== -1) {\n        if (uniqueCats.length === 20) {\n          var _idx = uniqueCats.indexOf(RARE);\n\n          var greyIdx2 = 15;\n\n          if (uniqueCats.indexOf('unknown') !== -1) {\n            greyIdx2 = 14;\n          }\n\n          var _elem = uniqueCats[greyIdx2];\n          uniqueCats[greyIdx2] = RARE;\n          uniqueCats[_idx] = _elem;\n        }\n      } // make colorScale\n\n\n      var colorExtent = d3.extent(metas);\n      var min_score = colorExtent[0];\n      var max_score = colorExtent[1];\n      var colorScale = d3.scale.pow().domain([min_score, (min_score + max_score) / 2, max_score]).range(['#1f77b4', '#ddd', '#d62728']);\n\n      if (meta.name === 'Scores' || meta.name === 'R2_Score') {\n        // similarity scores should center at 0\n        colorExtent = d3.extent(metas);\n        colorScale = d3.scale.pow().domain([colorExtent[0], 0, colorExtent[1]]).range(['#1f77b4', '#ddd', '#d62728']);\n      } else if (dtype === 'boolean') {\n        colorScale = d3.scale.ordinal().domain([true, false]).range(['#cc0000', '#cccccc']);\n      } else if (nUniqueCats < 11) {\n        colorScale = d3.scale.category10().domain(uniqueCats);\n      } else if (nUniqueCats > 10 && nUniqueCats <= 20) {\n        colorScale = d3.scale.category20().domain(uniqueCats);\n      } else if (nUniqueCats <= 40) {\n        var colors40 = ['#1b70fc', '#faff16', '#d50527', '#158940', '#f898fd', '#24c9d7', '#cb9b64', '#866888', '#22e67a', '#e509ae', '#9dabfa', '#437e8a', '#b21bff', '#ff7b91', '#94aa05', '#ac5906', '#82a68d', '#fe6616', '#7a7352', '#f9bc0f', '#b65d66', '#07a2e6', '#c091ae', '#8a91a7', '#88fc07', '#ea42fe', '#9e8010', '#10b437', '#c281fe', '#f92b75', '#07c99d', '#a946aa', '#bfd544', '#16977e', '#ff6ac8', '#a88178', '#5776a9', '#678007', '#fa9316', '#85c070', '#6aa2a9', '#989e5d', '#fe9169', '#cd714a', '#6ed014', '#c5639c', '#c23271', '#698ffc', '#678275', '#c5a121', '#a978ba', '#ee534e', '#d24506', '#59c3fa', '#ca7b0a', '#6f7385', '#9a634a', '#48aa6f', '#ad9ad0', '#d7908c', '#6a8a53', '#8c46fc', '#8f5ab8', '#fd1105', '#7ea7cf', '#d77cd1', '#a9804b', '#0688b4', '#6a9f3e', '#ee8fba', '#a67389', '#9e8cfe', '#bd443c', '#6d63ff', '#d110d5', '#798cc3', '#df5f83', '#b1b853', '#bb59d8', '#1d960c', '#867ba8', '#18acc9', '#25b3a7', '#f3db1d', '#938c6d', '#936a24', '#a964fb', '#92e460', '#a05787', '#9c87a0', '#20c773', '#8b696d', '#78762d', '#e154c6', '#40835f', '#d73656', '#1afd5c', '#c4f546', '#3d88d8', '#bd3896', '#1397a3', '#f940a5', '#66aeff', '#d097e7', '#fe6ef9', '#d86507', '#8b900a', '#d47270', '#e8ac48', '#cf7c97', '#cebb11', '#718a90', '#e78139', '#ff7463', '#bea1fd'];\n        colorScale = d3.scale.ordinal().range(colors40).domain(uniqueCats);\n      }\n\n      return colorScale;\n    }\n  }, {\n    key: 'calculateShapeScale',\n    value: function calculateShapeScale(metaKey) {\n      var symbols = d3.svg.symbolTypes.map(function (t) {\n        return d3.svg.symbol().type(t)();\n      }); // make shapeScale for d3.legend\n\n      var meta = _.findWhere(this.metas, {\n        name: metaKey\n      }); // categorical data\n      // get grouped datasets, each group is going to be a cloud\n\n\n      var scatterDataSubsets = this.groupBy(metaKey);\n      var shapeLabels = void 0;\n      var shapeScale = d3.scale.ordinal().domain(Object.keys(scatterDataSubsets)).range(symbols);\n\n      if (['int', 'float'].indexOf(meta.type) !== -1 && meta.nUnique > 6) {\n        // get grouped datasets, each group is going to be a cloud\n        scatterDataSubsets = this.binBy(metaKey, 6); // Make a threshold scale\n\n        var binnedValues = binValues(_.pluck(this.data, metaKey), 6);\n\n        if (meta.name === 'p-value') {\n          // get grouped datasets, each group is going to be a cloud\n          var pValueDomain = [0.001, 0.01, 0.05, 0.1, 1];\n          scatterDataSubsets = this.binBy2(metaKey, pValueDomain); // Make a threshold scale\n\n          var _binnedValues = binValues2(_.pluck(this.data, metaKey), pValueDomain); // overwrite the symbols map to make it having the same length with pValueDomain\n\n\n          var _symbols = _.map(d3.svg.symbolTypes.slice(0, pValueDomain.length), function (t) {\n            return d3.svg.symbol().type(t)();\n          });\n        }\n\n        shapeScale = d3.scale.threshold().domain(binnedValues.domain).range(symbols);\n        shapeLabels = binnedValues.labels;\n      }\n\n      return {\n        shapeScale: shapeScale,\n        shapeLabels: shapeLabels,\n        scatterDataSubsets: scatterDataSubsets\n      };\n    }\n  }]);\n  return ScatterData;\n}();\n\nvar Scatter3dView = function (_React$Component) {\n  inherits(Scatter3dView, _React$Component);\n\n  function Scatter3dView(props) {\n    classCallCheck(this, Scatter3dView);\n\n    var _this3 = possibleConstructorReturn(this, (Scatter3dView.__proto__ || Object.getPrototypeOf(Scatter3dView)).call(this, props));\n\n    var is3d = _this3.props.is3d;\n    _this3.state = {\n      isLoading: false,\n      isLoaded: false,\n      url: _this3.props.url,\n      data: _this3.props.data,\n      model: null,\n      WIDTH: _this3.props.width || 1400,\n      HEIGHT: _this3.props.height || 800,\n      DPR: _this3.props.DPR || 2,\n      labelKeys: _this3.props.labelKeys,\n      // which metaKey to use as labels\n      colorKey: _this3.props.colorKey,\n      // which metaKey to use as colors\n      shapeKey: _this3.props.shapeKey,\n      pointSize: is3d ? 0.5 : 12,\n      // the size of the points\n      showStats: false,\n      // whether to show Stats\n      is3d: is3d,\n      // 3d or 2d\n      colorScale: _this3.props.colorScale,\n      shapeScale: _this3.props.shapeScale,\n      shapeLabels: _this3.props.shapeLabels // events\n\n    };\n    _this3.handleMouseMove = _this3.handleMouseMove.bind(_this3);\n    return _this3;\n  }\n\n  createClass(Scatter3dView, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this4 = this; // fetch data from url\n\n\n      if (this.props.url) {\n        // url is given\n        this.setState({\n          isLoading: true\n        });\n        fetch(this.props.url).then(function (response) {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('Something went wrong when fetching data ...');\n          }\n        }).then(function (data) {\n          _this4.setState({\n            data: data,\n            model: new ScatterData(data),\n            // init model\n            isLoading: false,\n            isLoaded: true\n          });\n\n          _this4.makeMaterial();\n\n          _this4.setUpStage();\n\n          _this4.shapeBy(_this4.state.shapeKey);\n\n          _this4.renderScatter();\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (!this.props.url) {\n        // only trigger rendering when url is not set directly to prop\n        // data is set via parent compoent\n        if (prevState.data === null && prevProps.data === null && this.props.data !== null && this.state.data === null) {\n          this.makeMaterial();\n          this.setUpStage();\n        } else if (this.props.data !== null && this.props.shapeScale !== null) {\n          // this.shapeBy(this.state.shapeKey) // will update state shapeScale etc.\n          this.shapeBy(this.props.shapeKey); // will update state shapeScale etc.\n\n          this.renderScatter();\n        } else if (this.props.colorKey !== prevProps.colorKey) {\n          // colorKey changed through parent state passed as prop\n          this.renderScatter();\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref) {\n          return _this5.mount = _ref;\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this5.handleMouseMove(e);\n        } // onClick={e => this.handleMouseClick(e)}\n\n      });\n    }\n  }, {\n    key: 'setUpStage',\n    value: function setUpStage() {\n      var _this6 = this; // set up THREE.js visualization components\n\n\n      var _state = this.state,\n          WIDTH = _state.WIDTH,\n          HEIGHT = _state.HEIGHT,\n          DPR = _state.DPR;\n      var aspectRatio = WIDTH / HEIGHT; // set up scene, camera, renderer\n\n      var scene = new Scene();\n      var renderer = new WebGLRenderer();\n      renderer.setClearColor(0xffffff);\n      renderer.setPixelRatio(DPR);\n      renderer.setSize(WIDTH, HEIGHT); // 2d\n\n      var ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 10.5;\n      var left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n      var right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n      var bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n      var top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT; // Scale up the larger of (w, h) to match the aspect ratio.\n\n      if (aspectRatio > 1) {\n        left *= aspectRatio;\n        right *= aspectRatio;\n      } else {\n        top /= aspectRatio;\n        bottom /= aspectRatio;\n      }\n\n      var camera = new OrthographicCamera(left, right, top, bottom, -1000, 1000);\n\n      if (this.state.is3d) {\n        camera = new PerspectiveCamera(70, aspectRatio, 0.01, 1000000);\n        camera.position.z = 30;\n      } // Put the renderer's DOM into the container\n\n\n      renderer.domElement.id = 'renderer';\n      this.mount.appendChild(renderer.domElement); // this.mount.style.position = 'relative'\n      // this.mount.style.padding = 0\n      // set up orbit controls\n\n      var controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableZoom = true;\n      controls.screenSpacePanning = true;\n\n      if (!this.state.is3d) {\n        controls.enableRotate = false;\n        controls.mouseButtons = {\n          LEFT: MOUSE.RIGHT,\n          MIDDLE: MOUSE.DOLLY,\n          RIGHT: MOUSE.LEFT\n        };\n      }\n\n      controls.addEventListener('change', function (e) {\n        _this6.renderScatter();\n      }); // set up raycaster, mouse\n\n      var raycaster = new Raycaster();\n\n      if (this.state.raycasterThreshold) {\n        raycaster.params.Points.threshold = this.raycasterThreshold;\n      } else {\n        if (this.state.is3d) {\n          raycaster.params.Points.threshold = this.state.pointSize / 5;\n        } else {\n          raycaster.params.Points.threshold = this.state.pointSize / 500;\n        }\n      }\n\n      var mouse = new Vector2(); // bind three js object to component\n\n      this.scene = scene;\n      this.renderer = renderer;\n      this.camera = camera;\n      this.controls = controls;\n      this.raycaster = raycaster;\n      this.mouse = mouse; //   this.addMouseEvents();\n    }\n  }, {\n    key: 'handleMouseMove',\n    value: function handleMouseMove(e) {\n      var mouse = this.mouse;\n      var _state2 = this.state,\n          WIDTH = _state2.WIDTH,\n          HEIGHT = _state2.HEIGHT;\n      mouse.x = e.nativeEvent.offsetX / WIDTH * 2 - 1;\n      mouse.y = -(e.nativeEvent.offsetY / HEIGHT) * 2 + 1;\n      this.mouse = mouse;\n      this.renderScatter();\n    }\n  }, {\n    key: 'makeMaterial',\n    value: function makeMaterial() {\n      var symbolTypes = ['circle', 'cross', 'diamond', 'square', 'triangle-down', 'triangle-up'];\n      var materials = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = symbolTypes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var symbolType = _step4.value;\n          var textureResult = new Texture$1(symbolType).load();\n          var material = new PointsMaterial({\n            vertexColors: VertexColors,\n            size: this.state.pointSize,\n            sizeAttenuation: this.state.is3d,\n            map: textureResult,\n            alphaTest: 0.2,\n            transparent: true,\n            opacity: 0.6\n          });\n          materials.push(material);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this.materials = materials;\n    }\n  }, {\n    key: 'clearScene',\n    value: function clearScene() {\n      var scene = this.scene;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = scene.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var child = _step5.value;\n          scene.remove(child);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'shapeBy',\n    value: function shapeBy(metaKey) {\n      var model = this.props.model;\n      var scene = this.scene;\n\n      var _model$calculateShape = model.calculateShapeScale(metaKey),\n          shapeScale = _model$calculateShape.shapeScale,\n          shapeLabels = _model$calculateShape.shapeLabels,\n          scatterDataSubsets = _model$calculateShape.scatterDataSubsets; // Update geometry by merging individual genmetries from each group\n\n\n      var geometries = [];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = Object.keys(scatterDataSubsets)[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var key = _step6.value;\n          var geometry = new PointsGeometry({\n            model: scatterDataSubsets[key]\n          });\n          geometries.push(geometry.geometry);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var mergedGeometry = BufferGeometryUtils.mergeBufferGeometries(geometries); // concat all indices from each geometry\n\n      var arrayOfIndices = geometries.map(function (g) {\n        return g.userData.index;\n      });\n      var indices = arrayOfIndices.reduce(function (arr1, arr2) {\n        return arr1.concat(arr2);\n      });\n      var labels = model.getLabels(this.state.labelKeys);\n      labels = orderArray(labels, indices);\n      mergedGeometry.userData = {\n        index: indices,\n        labels: labels\n      };\n      var groupSizes = geometries.map(function (g) {\n        return g.index.length;\n      }); // to keep track of the cumulative sums of the group sizes, prepended by -1\n\n      var cumsums = groupSizes.reduce(function (a, x, i) {\n        return [].concat(toConsumableArray(a), [x + (a[i - 1] || 0)]);\n      }, []);\n      cumsums.unshift(-1);\n\n      for (var i = 0; i < geometries.length; i++) {\n        mergedGeometry.addGroup(cumsums[i] + 1, groupSizes[i], i);\n      }\n\n      var points = new Points(mergedGeometry, this.materials); // clear clouds\n\n      this.clearScene();\n      scene.add(points);\n      this.points = points; // calculate colorScale\n      // const colorScale = model.calculateColorScale(this.props.colorKey)\n\n      this.setColors(this.props.colorScale, this.props.colorKey); // this.setState({\n      //   colorScale: this.props.colorScale,\n      //   shapeKey: metaKey,\n      //   shapeScale: shapeScale,\n      //   shapeLabels: shapeLabels\n      // })\n      // this.resetColors()\n    }\n  }, {\n    key: 'renderScatter',\n    value: function renderScatter() {\n      var raycaster = this.raycaster,\n          mouse = this.mouse,\n          camera = this.camera,\n          renderer = this.renderer,\n          scene = this.scene; // update the picking ray with the camera and mouse position\n\n      raycaster.setFromCamera(mouse, camera); // calculate objects intersecting the picking ray\n\n      var intersects = raycaster.intersectObjects([this.points]); // reset colors\n\n      this.resetColors(); // remove text-label if exists\n\n      var textLabel = document.getElementById('text-label');\n\n      if (textLabel) {\n        textLabel.remove();\n      } // add interactivities if there is intesecting points\n\n\n      if (intersects.length > 0) {\n        // only highlight the closest object\n        var intersect = intersects[0];\n        var idx = intersect.index;\n        var geometry = intersect.object.geometry; // change color of the point\n\n        geometry.attributes.color.needsUpdate = true;\n        geometry.attributes.color.array[idx * 3] = 0.1;\n        geometry.attributes.color.array[idx * 3 + 1] = 0.8;\n        geometry.attributes.color.array[idx * 3 + 2] = 0.1; // find the position of the point\n\n        var pointPosition = {\n          x: geometry.attributes.position.array[idx * 3],\n          y: geometry.attributes.position.array[idx * 3 + 1],\n          z: geometry.attributes.position.array[idx * 3 + 2] // add text canvas\n\n        };\n        var textCanvas = this.makeTextCanvas(geometry.userData.labels[idx], pointPosition.x, pointPosition.y, pointPosition.z, {\n          fontsize: 24,\n          fontface: 'arial, sans-serif',\n          textColor: {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0.8\n          }\n        });\n        textCanvas.id = 'text-label';\n        this.mount.appendChild(textCanvas);\n      }\n\n      renderer.render(scene, camera);\n    }\n  }, {\n    key: 'makeTextCanvas',\n    value: function makeTextCanvas(message, x, y, z, parameters) {\n      if (parameters === undefined) parameters = {};\n      var fontface = parameters.hasOwnProperty('fontface') ? parameters['fontface'] : 'arial, sans-serif';\n      var fontsize = parameters.hasOwnProperty('fontsize') ? parameters['fontsize'] : 18;\n      var textColor = parameters.hasOwnProperty('textColor') ? parameters['textColor'] : {\n        r: 0,\n        g: 0,\n        b: 255,\n        a: 0.8\n      };\n      var lineHeight = parameters.hasOwnProperty('lineHeight') ? parameters['lineHeight'] : 20;\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var _state3 = this.state,\n          WIDTH = _state3.WIDTH,\n          HEIGHT = _state3.HEIGHT;\n      canvas.width = WIDTH;\n      canvas.height = HEIGHT;\n      context.font = fontsize + 'px ' + fontface;\n      context.textBaseline = 'alphabetic';\n      context.textAlign = 'left'; // get size data (height depends only on font size)\n\n      var metrics = context.measureText(message); // text color.  Note that we have to do this AFTER the round-rect as it also uses the \"fillstyle\" of the canvas\n\n      context.fillStyle = getCanvasColor(textColor); // calculate the project of 3d point into 2d plain\n\n      var point = new Vector3(x, y, z);\n      var pv = new Vector3().copy(point).project(this.camera);\n      var coords = {\n        x: (pv.x + 1) / 2 * WIDTH,\n        // * this.DPR,\n        y: -((pv.y - 1) / 2 * HEIGHT) // * this.DPR\n        // draw the text (in multiple lines)\n\n      };\n      var lines = message.split('\\n');\n\n      for (var i = 0; i < lines.length; i++) {\n        context.fillText(lines[i], coords.x, coords.y + i * lineHeight);\n      } // styles of canvas element\n\n\n      canvas.style.left = 0;\n      canvas.style.top = 0;\n      canvas.style.position = 'absolute';\n      canvas.style.pointerEvents = 'none';\n      return canvas;\n    }\n  }, {\n    key: 'resetColors',\n    value: function resetColors() {\n      // this.setColors(this.state.colorScale, this.state.colorKey)\n      this.setColors(this.props.colorScale, this.props.colorKey);\n    }\n  }, {\n    key: 'setColors',\n    value: function setColors(colorScale, metaKey) {\n      // Color points by a certain metaKey given colorScale\n      // const model = this.state.model\n      var model = this.props.model;\n      var metas = model.getAttr(metaKey);\n      var geometry = this.points.geometry;\n      var idx = geometry.userData.index;\n      metas = orderArray(metas, idx);\n\n      var meta = _.findWhere(model.metas, {\n        name: metaKey\n      });\n\n      var dtype = meta.type;\n\n      if (dtype !== 'float' && dtype !== 'int' && meta.nUnique > 20) {\n        metas = encodeRareCategories(metas, 19);\n      } // construct colors BufferAttribute\n\n\n      var colors = new Float32Array(model.n * 3);\n      var frequentCategories = {\n        length: 2\n      };\n\n      if (colorScale.hasOwnProperty('domain')) {\n        frequentCategories = colorScale.domain().slice();\n      }\n\n      for (var i = metas.length - 1; i >= 0; i--) {\n        var color = colorScale(metas[i]);\n        color = new Color(color);\n        color.toArray(colors, i * 3);\n      }\n\n      if (frequentCategories.length > 3) {\n        for (var _i = metas.length - 1; _i >= 0; _i--) {\n          var _color = colorScale(metas[_i]);\n\n          if (frequentCategories.indexOf(metas[_i]) === -1) {\n            _color = colorScale(RARE);\n          }\n\n          _color = new Color(_color);\n\n          _color.toArray(colors, _i * 3);\n        }\n      }\n\n      geometry.addAttribute('color', new BufferAttribute(colors.slice(), 3));\n    } // highlightSubset (idsToHighlight) {\n    //   const dataSubset = this.props.model.getSubset(idsToHighlight)\n    //   const highlightCould = this.createHighlightCloud(dataSubset)\n    //   highlightCould.setSingleColor('yellow')\n    //   highlightCould.name = 'highlight'\n    //   this.scene.add(highlightCould)\n    //   this.renderScatter()\n    // }\n    // createHighlightCloud (dataSubset) {\n    //   // dataSubset should be a ScatterDataSubset instance\n    //   const geometryHighlight = new PointsGeometry(dataSubset)\n    //   const material = new THREE.PointsMaterial({\n    //     vertexColors: THREE.VertexColors,\n    //     size: this.state.pointSize * 5,\n    //     sizeAttenuation: false,\n    //     map: this.materials[0].map,\n    //     transparent: true,\n    //     opacity: 0.4\n    //   })\n    //   const pointsHighlight = new THREE.Points(geometryHighlight, material)\n    // }\n\n  }]);\n  return Scatter3dView;\n}(React.Component);\n/*\nThe widgets for the interactive scatter plot.\n*/\n\n\nvar Legend = function (_React$Component) {\n  inherits(Legend, _React$Component);\n\n  function Legend(props) {\n    classCallCheck(this, Legend);\n\n    var _this = possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, props));\n\n    _this.state = {\n      width: _this.props.width || 300,\n      height: _this.props.height || 800\n    };\n    return _this;\n  }\n\n  createClass(Legend, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.setUpDOMs();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (prevProps.colorScale !== this.props.colorScale) {\n        this.displayColorLegend(this.props.colorScale, this.props.colorKey);\n      }\n\n      if (prevProps.shapeScale !== this.props.shapeScale) {\n        this.displayShapeLegend(this.props.shapeScale, this.props.shapeKey, this.props.shapeLabels);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref) {\n          return _this2.mount = _ref;\n        } // onMouseMove={e => this.handleMouseMove(e)}\n\n      });\n    }\n  }, {\n    key: 'setUpDOMs',\n    value: function setUpDOMs() {\n      // set up DOMs for the legends\n      var _state = this.state,\n          width = _state.width,\n          height = _state.height;\n      this.el = d3.select(this.mount).append('svg').attr('id', 'legend').attr('width', width).attr('height', height);\n      this.g = this.el.append('g').attr('class', 'legend').attr('transform', 'translate(10, 20)');\n      this.g.append('g').attr('id', 'legendShape').attr('class', 'legendPanel').attr('transform', 'translate(0, 0)');\n      this.g.append('g').attr('id', 'legendColor').attr('class', 'legendPanel').attr('transform', 'translate(110, 0)'); // styles\n\n      this.mount.style.position = 'absolute';\n      this.mount.style.zIndex = 10;\n      this.mount.style.overflow = 'visible';\n      this.mount.style.left = 0;\n      this.mount.style.top = 0;\n    }\n  }, {\n    key: 'displayShapeLegend',\n    value: function displayShapeLegend(shapeScale, shapeKey, shapeLabels) {\n      var legendShape = legend.symbol().scale(shapeScale).orient('vertical').title(shapeKey);\n\n      if (shapeLabels) {\n        legendShape.labels(shapeLabels);\n      }\n\n      this.g.select('#legendShape').call(legendShape);\n    }\n  }, {\n    key: 'displayColorLegend',\n    value: function displayColorLegend(colorScale, colorKey) {\n      var legendColor = legend.color().title(colorKey).shapeWidth(20).cells(5).labelFormat(d3.format('.2f')).scale(colorScale);\n      this.g.select('#legendColor').call(legendColor);\n    }\n  }]);\n  return Legend;\n}(React.Component);\n\nvar SelectDropdown = function (_React$Component2) {\n  inherits(SelectDropdown, _React$Component2);\n\n  function SelectDropdown(props) {\n    classCallCheck(this, SelectDropdown);\n\n    var _this3 = possibleConstructorReturn(this, (SelectDropdown.__proto__ || Object.getPrototypeOf(SelectDropdown)).call(this, props));\n\n    _this3.state = {\n      label: _this3.props.label,\n      options: null,\n      defaultValue: _this3.props.defaultValue\n    };\n    _this3.handleChange = _this3.handleChange.bind(_this3);\n    return _this3;\n  }\n\n  createClass(SelectDropdown, [{\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref2) {\n          return _this4.mount = _ref2;\n        }\n      }, React.createElement('label', null, this.props.label), React.createElement(Select, {\n        defaultValue: this.state.defaultValue,\n        options: this.props.options,\n        onChange: this.handleChange,\n        styles: {\n          container: function container() {\n            return {\n              width: _this4.props.width\n            };\n          }\n        }\n      }));\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(value) {\n      this.props.onSelectChange(value);\n    }\n  }]);\n  return SelectDropdown;\n}(React.Component);\n\nvar SearchSelectize = function (_React$Component3) {\n  inherits(SearchSelectize, _React$Component3);\n\n  function SearchSelectize(props) {\n    classCallCheck(this, SearchSelectize);\n\n    var _this5 = possibleConstructorReturn(this, (SearchSelectize.__proto__ || Object.getPrototypeOf(SearchSelectize)).call(this, props));\n\n    _this5.state = {\n      searchStr: ''\n    };\n    _this5.handleChange = _this5.handleChange.bind(_this5);\n    return _this5;\n  }\n\n  createClass(SearchSelectize, [{\n    key: 'render',\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement('div', {\n        ref: function ref(_ref3) {\n          return _this6.mount = _ref3;\n        }\n      }, React.createElement('label', null, this.props.label), React.createElement(Select, {\n        defaultValue: '',\n        defaultInputValue: '',\n        onChange: this.handleChange\n      }));\n    }\n  }, {\n    key: 'handleChange',\n    value: function handleChange(value) {\n      this.props.onInputChange(value);\n    }\n  }]);\n  return SearchSelectize;\n}(React.Component);\n\nvar scatterWidgets =\n/*#__PURE__*/\nObject.freeze({\n  Legend: Legend,\n  SelectDropdown: SelectDropdown,\n  SearchSelectize: SearchSelectize\n});\n\nvar ScatterBoard = function (_React$Component) {\n  inherits(ScatterBoard, _React$Component);\n\n  function ScatterBoard(props) {\n    classCallCheck(this, ScatterBoard);\n\n    var _this = possibleConstructorReturn(this, (ScatterBoard.__proto__ || Object.getPrototypeOf(ScatterBoard)).call(this, props));\n\n    _this.state = {\n      data: null,\n      model: null,\n      colorScale: null,\n      shapeScale: null,\n      shapeLabels: null,\n      colorKey: _this.props.colorKey,\n      shapeKey: _this.props.shapeKey,\n      labelKeys: _this.props.labelKeys,\n      is3d: _this.props.is3d // events\n\n    };\n    _this.handleColorKeyChange = _this.handleColorKeyChange.bind(_this);\n    _this.handleShapeKeyChange = _this.handleShapeKeyChange.bind(_this);\n    fetch(_this.props.url).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong when fetching data ...');\n      }\n    }).then(function (data) {\n      return _this.setState({\n        data: data,\n        model: new ScatterData(data)\n      });\n    });\n    return _this;\n  }\n\n  createClass(ScatterBoard, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this; // variables to be passed to children's states\n\n\n      var _state = this.state,\n          colorKey = _state.colorKey,\n          shapeKey = _state.shapeKey,\n          labelKeys = _state.labelKeys,\n          is3d = _state.is3d;\n      var _state2 = this.state,\n          colorScale = _state2.colorScale,\n          shapeScale = _state2.shapeScale,\n          shapeLabels = _state2.shapeLabels;\n      var _props = this.props,\n          width = _props.width,\n          height = _props.height;\n      var colorOptions = null;\n      var shapeOptions = null;\n\n      if (this.state.model) {\n        colorOptions = this.state.model.getColorOptions();\n        shapeOptions = this.state.model.getShapeOptions();\n      }\n\n      return React.createElement('div', {\n        style: {\n          position: 'relative',\n          padding: 0,\n          width: width,\n          height: height\n        }\n      }, React.createElement(Scatter3dView, {\n        data: this.state.data,\n        model: this.state.model,\n        width: width,\n        height: width,\n        DPR: window.devicePixelRatio,\n        colorKey: colorKey,\n        shapeKey: shapeKey,\n        labelKeys: labelKeys,\n        colorScale: colorScale,\n        shapeScale: shapeScale,\n        shapeLabels: shapeScale,\n        is3d: is3d // create a ref for the parent to refer to the child\n        ,\n        ref: function ref(scatter3dView) {\n          _this2.scatter3dView = scatter3dView;\n        }\n      }), React.createElement(Legend, {\n        colorScale: colorScale,\n        colorKey: colorKey,\n        shapeScale: shapeScale,\n        shapeKey: shapeKey,\n        shapeLabels: shapeLabels\n      }), React.createElement('div', {\n        style: {\n          zIndex: 10,\n          top: 0,\n          right: 0,\n          width: 200,\n          position: 'absolute'\n        }\n      }, React.createElement(SelectDropdown, {\n        label: 'Color by:',\n        defaultValue: {\n          value: colorKey,\n          label: colorKey\n        },\n        options: colorOptions,\n        onSelectChange: this.handleColorKeyChange,\n        width: 180\n      }), React.createElement(SelectDropdown, {\n        label: 'Shape by:',\n        defaultValue: {\n          value: shapeKey,\n          label: shapeKey\n        },\n        options: shapeOptions,\n        onSelectChange: this.handleShapeKeyChange,\n        width: 180\n      })));\n    }\n  }, {\n    key: 'handleColorKeyChange',\n    value: function handleColorKeyChange(value) {\n      // re-coloring the map when colorKey changed\n      var colorKey = value.value;\n\n      if (colorKey !== this.state.colorKey) {\n        var model = this.state.model;\n        var colorScale = model.calculateColorScale(colorKey);\n        this.setState({\n          colorKey: colorKey,\n          colorScale: colorScale\n        });\n      }\n    }\n  }, {\n    key: 'handleShapeKeyChange',\n    value: function handleShapeKeyChange(value) {\n      // re-shaping of the map when shapeKey changed\n      var shapeKey = value.value;\n\n      if (shapeKey !== this.state.shapeKey) {\n        var model = this.state.model;\n\n        var _model$calculateShape = model.calculateShapeScale(shapeKey),\n            shapeScale = _model$calculateShape.shapeScale,\n            shapeLabels = _model$calculateShape.shapeLabels;\n\n        this.setState({\n          shapeKey: shapeKey,\n          shapeScale: shapeScale,\n          shapeLabels: shapeLabels\n        });\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.data === null && prevState.data !== this.state.data) {\n        // data has been fetched for the first time\n        // const { colorKey, shapeKey } = this.scatter3dView.state\n        var _state3 = this.state,\n            colorKey = _state3.colorKey,\n            shapeKey = _state3.shapeKey;\n        var model = this.state.model;\n        var colorScale = model.calculateColorScale(colorKey);\n\n        var _model$calculateShape2 = model.calculateShapeScale(shapeKey),\n            shapeScale = _model$calculateShape2.shapeScale,\n            shapeLabels = _model$calculateShape2.shapeLabels;\n\n        this.setState({\n          colorScale: colorScale,\n          shapeScale: shapeScale,\n          shapeLabels: shapeLabels\n        });\n      }\n    }\n  }]);\n  return ScatterBoard;\n}(React.Component);\n\nvar index$1 = {\n  ScatterBoard: ScatterBoard\n};\nexport default index$1;\nexport { ScatterBoard, ScatterData, Scatter3dView, scatterWidgets as ScatterWidgets };","import React, { Component } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { ScatterBoard } from 'react-scatter-board'\n\n// get the Bootstrap column width\nconst rootElem = document.getElementById('root')\nconst colWidth = rootElem.clientWidth * 0.75\n\n// 2d example\nconst dataUrl2 = 'https://amp.pharm.mssm.edu/l1000fwd/graph/A549_kNN_5'\nconst board2d = (\n  <ScatterBoard\n    url={dataUrl2}\n    shapeKey='Time'\n    colorKey='MOA'\n    labelKeys={['sig_id']}\n    width={colWidth}\n    height={colWidth}\n  />\n)\n\n// 3d example\nconst dataUrl3 = 'https://amp.pharm.mssm.edu/scavi/graph/GSE48968/tSNE/3'\nconst board3d = (\n  <ScatterBoard\n    url={dataUrl3}\n    shapeKey='strain'\n    colorKey='description'\n    labelKeys={['sample_id', 'description']}\n    is3d={true}\n    width={colWidth}\n    height={colWidth}\n  />\n)\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row>\n          <Col xs={3}>\n            <h1>2d Example:</h1>\n          </Col>\n          <Col xs={9}>{board2d}</Col>\n        </Row>\n        <Row>\n          <Col xs={3}>\n            <h1>3d Example:</h1>\n          </Col>\n          <Col xs={9}>{board3d}</Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}